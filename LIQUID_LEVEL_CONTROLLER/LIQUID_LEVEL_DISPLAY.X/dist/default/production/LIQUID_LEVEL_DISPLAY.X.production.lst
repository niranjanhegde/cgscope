

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Nov 24 15:52:57 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     	;# 
    23  0001                     	;# 
    24  0002                     	;# 
    25  0003                     	;# 
    26  0004                     	;# 
    27  0005                     	;# 
    28  0006                     	;# 
    29  0007                     	;# 
    30  0008                     	;# 
    31  0009                     	;# 
    32  000A                     	;# 
    33  000B                     	;# 
    34  000C                     	;# 
    35  000E                     	;# 
    36  0011                     	;# 
    37  0012                     	;# 
    38  0013                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  008C                     	;# 
    49  008E                     	;# 
    50  0091                     	;# 
    51  0092                     	;# 
    52  0093                     	;# 
    53  0095                     	;# 
    54  0096                     	;# 
    55  0097                     	;# 
    56  0099                     	;# 
    57  009A                     	;# 
    58  009B                     	;# 
    59  009B                     	;# 
    60  009C                     	;# 
    61  009D                     	;# 
    62  009E                     	;# 
    63  009F                     	;# 
    64  010C                     	;# 
    65  010E                     	;# 
    66  0111                     	;# 
    67  0112                     	;# 
    68  0113                     	;# 
    69  0114                     	;# 
    70  0115                     	;# 
    71  0116                     	;# 
    72  0117                     	;# 
    73  0118                     	;# 
    74  0119                     	;# 
    75  011D                     	;# 
    76  018C                     	;# 
    77  018E                     	;# 
    78  0191                     	;# 
    79  0191                     	;# 
    80  0192                     	;# 
    81  0193                     	;# 
    82  0193                     	;# 
    83  0194                     	;# 
    84  0195                     	;# 
    85  0196                     	;# 
    86  0197                     	;# 
    87  020C                     	;# 
    88  0211                     	;# 
    89  0211                     	;# 
    90  0212                     	;# 
    91  0212                     	;# 
    92  0213                     	;# 
    93  0213                     	;# 
    94  0214                     	;# 
    95  0214                     	;# 
    96  0215                     	;# 
    97  0215                     	;# 
    98  0215                     	;# 
    99  0216                     	;# 
   100  0216                     	;# 
   101  0217                     	;# 
   102  0217                     	;# 
   103  0391                     	;# 
   104  0392                     	;# 
   105  0393                     	;# 
   106  0498                     	;# 
   107  0498                     	;# 
   108  0499                     	;# 
   109  049A                     	;# 
   110  049B                     	;# 
   111  049B                     	;# 
   112  049C                     	;# 
   113  049D                     	;# 
   114  049E                     	;# 
   115  049F                     	;# 
   116  0611                     	;# 
   117  0612                     	;# 
   118  0613                     	;# 
   119  0613                     	;# 
   120  0614                     	;# 
   121  0615                     	;# 
   122  0616                     	;# 
   123  0616                     	;# 
   124  0617                     	;# 
   125  0618                     	;# 
   126  0619                     	;# 
   127  0619                     	;# 
   128  061A                     	;# 
   129  061B                     	;# 
   130  061C                     	;# 
   131  061C                     	;# 
   132  0691                     	;# 
   133  0692                     	;# 
   134  0693                     	;# 
   135  0694                     	;# 
   136  0695                     	;# 
   137  0F0F                     	;# 
   138  0F10                     	;# 
   139  0F11                     	;# 
   140  0F12                     	;# 
   141  0F13                     	;# 
   142  0F14                     	;# 
   143  0F15                     	;# 
   144  0F16                     	;# 
   145  0F17                     	;# 
   146  0F18                     	;# 
   147  0F19                     	;# 
   148  0F1A                     	;# 
   149  0F1B                     	;# 
   150  0F1C                     	;# 
   151  0F1D                     	;# 
   152  0F1E                     	;# 
   153  0F1F                     	;# 
   154  0FE3                     	;# 
   155  0FE4                     	;# 
   156  0FE5                     	;# 
   157  0FE6                     	;# 
   158  0FE7                     	;# 
   159  0FE8                     	;# 
   160  0FE9                     	;# 
   161  0FEA                     	;# 
   162  0FEB                     	;# 
   163  0FED                     	;# 
   164  0FEE                     	;# 
   165  0FEF                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000E                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0015                     	;# 
   184  0016                     	;# 
   185  0016                     	;# 
   186  0017                     	;# 
   187  0018                     	;# 
   188  0019                     	;# 
   189  001A                     	;# 
   190  001B                     	;# 
   191  001C                     	;# 
   192  008C                     	;# 
   193  008E                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  010C                     	;# 
   209  010E                     	;# 
   210  0111                     	;# 
   211  0112                     	;# 
   212  0113                     	;# 
   213  0114                     	;# 
   214  0115                     	;# 
   215  0116                     	;# 
   216  0117                     	;# 
   217  0118                     	;# 
   218  0119                     	;# 
   219  011D                     	;# 
   220  018C                     	;# 
   221  018E                     	;# 
   222  0191                     	;# 
   223  0191                     	;# 
   224  0192                     	;# 
   225  0193                     	;# 
   226  0193                     	;# 
   227  0194                     	;# 
   228  0195                     	;# 
   229  0196                     	;# 
   230  0197                     	;# 
   231  020C                     	;# 
   232  0211                     	;# 
   233  0211                     	;# 
   234  0212                     	;# 
   235  0212                     	;# 
   236  0213                     	;# 
   237  0213                     	;# 
   238  0214                     	;# 
   239  0214                     	;# 
   240  0215                     	;# 
   241  0215                     	;# 
   242  0215                     	;# 
   243  0216                     	;# 
   244  0216                     	;# 
   245  0217                     	;# 
   246  0217                     	;# 
   247  0391                     	;# 
   248  0392                     	;# 
   249  0393                     	;# 
   250  0498                     	;# 
   251  0498                     	;# 
   252  0499                     	;# 
   253  049A                     	;# 
   254  049B                     	;# 
   255  049B                     	;# 
   256  049C                     	;# 
   257  049D                     	;# 
   258  049E                     	;# 
   259  049F                     	;# 
   260  0611                     	;# 
   261  0612                     	;# 
   262  0613                     	;# 
   263  0613                     	;# 
   264  0614                     	;# 
   265  0615                     	;# 
   266  0616                     	;# 
   267  0616                     	;# 
   268  0617                     	;# 
   269  0618                     	;# 
   270  0619                     	;# 
   271  0619                     	;# 
   272  061A                     	;# 
   273  061B                     	;# 
   274  061C                     	;# 
   275  061C                     	;# 
   276  0691                     	;# 
   277  0692                     	;# 
   278  0693                     	;# 
   279  0694                     	;# 
   280  0695                     	;# 
   281  0F0F                     	;# 
   282  0F10                     	;# 
   283  0F11                     	;# 
   284  0F12                     	;# 
   285  0F13                     	;# 
   286  0F14                     	;# 
   287  0F15                     	;# 
   288  0F16                     	;# 
   289  0F17                     	;# 
   290  0F18                     	;# 
   291  0F19                     	;# 
   292  0F1A                     	;# 
   293  0F1B                     	;# 
   294  0F1C                     	;# 
   295  0F1D                     	;# 
   296  0F1E                     	;# 
   297  0F1F                     	;# 
   298  0FE3                     	;# 
   299  0FE4                     	;# 
   300  0FE5                     	;# 
   301  0FE6                     	;# 
   302  0FE7                     	;# 
   303  0FE8                     	;# 
   304  0FE9                     	;# 
   305  0FEA                     	;# 
   306  0FEB                     	;# 
   307  0FED                     	;# 
   308  0FEE                     	;# 
   309  0FEF                     	;# 
   310  0000                     	;# 
   311  0001                     	;# 
   312  0002                     	;# 
   313  0003                     	;# 
   314  0004                     	;# 
   315  0005                     	;# 
   316  0006                     	;# 
   317  0007                     	;# 
   318  0008                     	;# 
   319  0009                     	;# 
   320  000A                     	;# 
   321  000B                     	;# 
   322  000C                     	;# 
   323  000E                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  008C                     	;# 
   337  008E                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  010C                     	;# 
   353  010E                     	;# 
   354  0111                     	;# 
   355  0112                     	;# 
   356  0113                     	;# 
   357  0114                     	;# 
   358  0115                     	;# 
   359  0116                     	;# 
   360  0117                     	;# 
   361  0118                     	;# 
   362  0119                     	;# 
   363  011D                     	;# 
   364  018C                     	;# 
   365  018E                     	;# 
   366  0191                     	;# 
   367  0191                     	;# 
   368  0192                     	;# 
   369  0193                     	;# 
   370  0193                     	;# 
   371  0194                     	;# 
   372  0195                     	;# 
   373  0196                     	;# 
   374  0197                     	;# 
   375  020C                     	;# 
   376  0211                     	;# 
   377  0211                     	;# 
   378  0212                     	;# 
   379  0212                     	;# 
   380  0213                     	;# 
   381  0213                     	;# 
   382  0214                     	;# 
   383  0214                     	;# 
   384  0215                     	;# 
   385  0215                     	;# 
   386  0215                     	;# 
   387  0216                     	;# 
   388  0216                     	;# 
   389  0217                     	;# 
   390  0217                     	;# 
   391  0391                     	;# 
   392  0392                     	;# 
   393  0393                     	;# 
   394  0498                     	;# 
   395  0498                     	;# 
   396  0499                     	;# 
   397  049A                     	;# 
   398  049B                     	;# 
   399  049B                     	;# 
   400  049C                     	;# 
   401  049D                     	;# 
   402  049E                     	;# 
   403  049F                     	;# 
   404  0611                     	;# 
   405  0612                     	;# 
   406  0613                     	;# 
   407  0613                     	;# 
   408  0614                     	;# 
   409  0615                     	;# 
   410  0616                     	;# 
   411  0616                     	;# 
   412  0617                     	;# 
   413  0618                     	;# 
   414  0619                     	;# 
   415  0619                     	;# 
   416  061A                     	;# 
   417  061B                     	;# 
   418  061C                     	;# 
   419  061C                     	;# 
   420  0691                     	;# 
   421  0692                     	;# 
   422  0693                     	;# 
   423  0694                     	;# 
   424  0695                     	;# 
   425  0F0F                     	;# 
   426  0F10                     	;# 
   427  0F11                     	;# 
   428  0F12                     	;# 
   429  0F13                     	;# 
   430  0F14                     	;# 
   431  0F15                     	;# 
   432  0F16                     	;# 
   433  0F17                     	;# 
   434  0F18                     	;# 
   435  0F19                     	;# 
   436  0F1A                     	;# 
   437  0F1B                     	;# 
   438  0F1C                     	;# 
   439  0F1D                     	;# 
   440  0F1E                     	;# 
   441  0F1F                     	;# 
   442  0FE3                     	;# 
   443  0FE4                     	;# 
   444  0FE5                     	;# 
   445  0FE6                     	;# 
   446  0FE7                     	;# 
   447  0FE8                     	;# 
   448  0FE9                     	;# 
   449  0FEA                     	;# 
   450  0FEB                     	;# 
   451  0FED                     	;# 
   452  0FEE                     	;# 
   453  0FEF                     	;# 
   454  0000                     	;# 
   455  0001                     	;# 
   456  0002                     	;# 
   457  0003                     	;# 
   458  0004                     	;# 
   459  0005                     	;# 
   460  0006                     	;# 
   461  0007                     	;# 
   462  0008                     	;# 
   463  0009                     	;# 
   464  000A                     	;# 
   465  000B                     	;# 
   466  000C                     	;# 
   467  000E                     	;# 
   468  0011                     	;# 
   469  0012                     	;# 
   470  0013                     	;# 
   471  0015                     	;# 
   472  0016                     	;# 
   473  0016                     	;# 
   474  0017                     	;# 
   475  0018                     	;# 
   476  0019                     	;# 
   477  001A                     	;# 
   478  001B                     	;# 
   479  001C                     	;# 
   480  008C                     	;# 
   481  008E                     	;# 
   482  0091                     	;# 
   483  0092                     	;# 
   484  0093                     	;# 
   485  0095                     	;# 
   486  0096                     	;# 
   487  0097                     	;# 
   488  0099                     	;# 
   489  009A                     	;# 
   490  009B                     	;# 
   491  009B                     	;# 
   492  009C                     	;# 
   493  009D                     	;# 
   494  009E                     	;# 
   495  009F                     	;# 
   496  010C                     	;# 
   497  010E                     	;# 
   498  0111                     	;# 
   499  0112                     	;# 
   500  0113                     	;# 
   501  0114                     	;# 
   502  0115                     	;# 
   503  0116                     	;# 
   504  0117                     	;# 
   505  0118                     	;# 
   506  0119                     	;# 
   507  011D                     	;# 
   508  018C                     	;# 
   509  018E                     	;# 
   510  0191                     	;# 
   511  0191                     	;# 
   512  0192                     	;# 
   513  0193                     	;# 
   514  0193                     	;# 
   515  0194                     	;# 
   516  0195                     	;# 
   517  0196                     	;# 
   518  0197                     	;# 
   519  020C                     	;# 
   520  0211                     	;# 
   521  0211                     	;# 
   522  0212                     	;# 
   523  0212                     	;# 
   524  0213                     	;# 
   525  0213                     	;# 
   526  0214                     	;# 
   527  0214                     	;# 
   528  0215                     	;# 
   529  0215                     	;# 
   530  0215                     	;# 
   531  0216                     	;# 
   532  0216                     	;# 
   533  0217                     	;# 
   534  0217                     	;# 
   535  0391                     	;# 
   536  0392                     	;# 
   537  0393                     	;# 
   538  0498                     	;# 
   539  0498                     	;# 
   540  0499                     	;# 
   541  049A                     	;# 
   542  049B                     	;# 
   543  049B                     	;# 
   544  049C                     	;# 
   545  049D                     	;# 
   546  049E                     	;# 
   547  049F                     	;# 
   548  0611                     	;# 
   549  0612                     	;# 
   550  0613                     	;# 
   551  0613                     	;# 
   552  0614                     	;# 
   553  0615                     	;# 
   554  0616                     	;# 
   555  0616                     	;# 
   556  0617                     	;# 
   557  0618                     	;# 
   558  0619                     	;# 
   559  0619                     	;# 
   560  061A                     	;# 
   561  061B                     	;# 
   562  061C                     	;# 
   563  061C                     	;# 
   564  0691                     	;# 
   565  0692                     	;# 
   566  0693                     	;# 
   567  0694                     	;# 
   568  0695                     	;# 
   569  0F0F                     	;# 
   570  0F10                     	;# 
   571  0F11                     	;# 
   572  0F12                     	;# 
   573  0F13                     	;# 
   574  0F14                     	;# 
   575  0F15                     	;# 
   576  0F16                     	;# 
   577  0F17                     	;# 
   578  0F18                     	;# 
   579  0F19                     	;# 
   580  0F1A                     	;# 
   581  0F1B                     	;# 
   582  0F1C                     	;# 
   583  0F1D                     	;# 
   584  0F1E                     	;# 
   585  0F1F                     	;# 
   586  0FE3                     	;# 
   587  0FE4                     	;# 
   588  0FE5                     	;# 
   589  0FE6                     	;# 
   590  0FE7                     	;# 
   591  0FE8                     	;# 
   592  0FE9                     	;# 
   593  0FEA                     	;# 
   594  0FEB                     	;# 
   595  0FED                     	;# 
   596  0FEE                     	;# 
   597  0FEF                     	;# 
   598  0000                     	;# 
   599  0001                     	;# 
   600  0002                     	;# 
   601  0003                     	;# 
   602  0004                     	;# 
   603  0005                     	;# 
   604  0006                     	;# 
   605  0007                     	;# 
   606  0008                     	;# 
   607  0009                     	;# 
   608  000A                     	;# 
   609  000B                     	;# 
   610  000C                     	;# 
   611  000E                     	;# 
   612  0011                     	;# 
   613  0012                     	;# 
   614  0013                     	;# 
   615  0015                     	;# 
   616  0016                     	;# 
   617  0016                     	;# 
   618  0017                     	;# 
   619  0018                     	;# 
   620  0019                     	;# 
   621  001A                     	;# 
   622  001B                     	;# 
   623  001C                     	;# 
   624  008C                     	;# 
   625  008E                     	;# 
   626  0091                     	;# 
   627  0092                     	;# 
   628  0093                     	;# 
   629  0095                     	;# 
   630  0096                     	;# 
   631  0097                     	;# 
   632  0099                     	;# 
   633  009A                     	;# 
   634  009B                     	;# 
   635  009B                     	;# 
   636  009C                     	;# 
   637  009D                     	;# 
   638  009E                     	;# 
   639  009F                     	;# 
   640  010C                     	;# 
   641  010E                     	;# 
   642  0111                     	;# 
   643  0112                     	;# 
   644  0113                     	;# 
   645  0114                     	;# 
   646  0115                     	;# 
   647  0116                     	;# 
   648  0117                     	;# 
   649  0118                     	;# 
   650  0119                     	;# 
   651  011D                     	;# 
   652  018C                     	;# 
   653  018E                     	;# 
   654  0191                     	;# 
   655  0191                     	;# 
   656  0192                     	;# 
   657  0193                     	;# 
   658  0193                     	;# 
   659  0194                     	;# 
   660  0195                     	;# 
   661  0196                     	;# 
   662  0197                     	;# 
   663  020C                     	;# 
   664  0211                     	;# 
   665  0211                     	;# 
   666  0212                     	;# 
   667  0212                     	;# 
   668  0213                     	;# 
   669  0213                     	;# 
   670  0214                     	;# 
   671  0214                     	;# 
   672  0215                     	;# 
   673  0215                     	;# 
   674  0215                     	;# 
   675  0216                     	;# 
   676  0216                     	;# 
   677  0217                     	;# 
   678  0217                     	;# 
   679  0391                     	;# 
   680  0392                     	;# 
   681  0393                     	;# 
   682  0498                     	;# 
   683  0498                     	;# 
   684  0499                     	;# 
   685  049A                     	;# 
   686  049B                     	;# 
   687  049B                     	;# 
   688  049C                     	;# 
   689  049D                     	;# 
   690  049E                     	;# 
   691  049F                     	;# 
   692  0611                     	;# 
   693  0612                     	;# 
   694  0613                     	;# 
   695  0613                     	;# 
   696  0614                     	;# 
   697  0615                     	;# 
   698  0616                     	;# 
   699  0616                     	;# 
   700  0617                     	;# 
   701  0618                     	;# 
   702  0619                     	;# 
   703  0619                     	;# 
   704  061A                     	;# 
   705  061B                     	;# 
   706  061C                     	;# 
   707  061C                     	;# 
   708  0691                     	;# 
   709  0692                     	;# 
   710  0693                     	;# 
   711  0694                     	;# 
   712  0695                     	;# 
   713  0F0F                     	;# 
   714  0F10                     	;# 
   715  0F11                     	;# 
   716  0F12                     	;# 
   717  0F13                     	;# 
   718  0F14                     	;# 
   719  0F15                     	;# 
   720  0F16                     	;# 
   721  0F17                     	;# 
   722  0F18                     	;# 
   723  0F19                     	;# 
   724  0F1A                     	;# 
   725  0F1B                     	;# 
   726  0F1C                     	;# 
   727  0F1D                     	;# 
   728  0F1E                     	;# 
   729  0F1F                     	;# 
   730  0FE3                     	;# 
   731  0FE4                     	;# 
   732  0FE5                     	;# 
   733  0FE6                     	;# 
   734  0FE7                     	;# 
   735  0FE8                     	;# 
   736  0FE9                     	;# 
   737  0FEA                     	;# 
   738  0FEB                     	;# 
   739  0FED                     	;# 
   740  0FEE                     	;# 
   741  0FEF                     	;# 
   742                           
   743                           	psect	idataBANK0
   744  0555                     __pidataBANK0:	
   745                           
   746                           ;initializer for Display_put@F2972
   747  0555  34FC               	retlw	252
   748  0556  3460               	retlw	96
   749  0557  34DA               	retlw	218
   750  0558  34F2               	retlw	242
   751  0559  3466               	retlw	102
   752  055A  34B6               	retlw	182
   753  055B  34BE               	retlw	190
   754  055C  34E0               	retlw	224
   755  055D  34FE               	retlw	254
   756  055E  34F6               	retlw	246
   757  0073                     _RC3	set	115
   758  009D                     _ADCON0	set	157
   759  009D                     _ADCON0bits	set	157
   760  009E                     _ADCON1	set	158
   761  009F                     _ADCON2	set	159
   762  009C                     _ADRESH	set	156
   763  009B                     _ADRESL	set	155
   764  0095                     _OPTION_REGbits	set	149
   765  0099                     _OSCCON	set	153
   766  009A                     _OSCSTAT	set	154
   767  008C                     _TRISA	set	140
   768  008E                     _TRISC	set	142
   769  011D                     _APFCON	set	285
   770  010C                     _LATA	set	268
   771  010E                     _LATC	set	270
   772  0874                     _LATC4	set	2164
   773  0875                     _LATC5	set	2165
   774  018C                     _ANSELA	set	396
   775  018E                     _ANSELC	set	398
   776  020C                     _WPUA	set	524
   777                           
   778                           ; #config settings
   779  0000                     
   780                           	psect	cinit
   781  07F4                     start_initialization:	
   782  07F4                     __initialization:	
   783                           
   784                           ; Initialize objects allocated to BANK0
   785  07F4  3055               	movlw	low __pidataBANK0
   786  07F5  0084               	movwf	4
   787  07F6  3085               	movlw	(high __pidataBANK0)| (0+128)
   788  07F7  0085               	movwf	5
   789  07F8  303A               	movlw	low __pdataBANK0
   790  07F9  0086               	movwf	6
   791  07FA  3000               	movlw	high __pdataBANK0
   792  07FB  0087               	movwf	7
   793  07FC  300A               	movlw	10
   794  07FD  2547               	fcall	init_ram
   795  07FE                     end_of_initialization:	
   796                           ;End of C runtime variable initialization code
   797                           
   798  07FE                     __end_of__initialization:	
   799  07FE  0020               	movlb	0
   800  07FF  2D5F               	ljmp	_main	;jump to C main() function
   801                           
   802                           	psect	dataBANK0
   803  003A                     __pdataBANK0:	
   804  003A                     Display_put@F2972:	
   805  003A                     	ds	10
   806                           
   807                           	psect	inittext
   808  0547                     init_ram:	
   809  0547  00FE               	movwf	126
   810  0548                     initloop:	
   811  0548  0012               	moviw fsr0++
   812  0549  001E               	movwi fsr1++
   813  054A  0BFE               	decfsz	126,f
   814  054B  2D48               	goto	initloop
   815  054C  3400               	retlw	0
   816                           
   817                           	psect	cstackCOMMON
   818  0070                     __pcstackCOMMON:	
   819  0070                     ?_Display_put:	
   820  0070                     ??_Display_put:	
   821                           ; 0 bytes @ 0x0
   822                           
   823  0070                     ?_OSCILLATOR_Initialize:	
   824                           ; 0 bytes @ 0x0
   825                           
   826  0070                     ??_OSCILLATOR_Initialize:	
   827                           ; 0 bytes @ 0x0
   828                           
   829  0070                     ?_ADC_Initialize:	
   830                           ; 0 bytes @ 0x0
   831                           
   832  0070                     ??_ADC_Initialize:	
   833                           ; 0 bytes @ 0x0
   834                           
   835  0070                     ?_PIN_MANAGER_Initialize:	
   836                           ; 0 bytes @ 0x0
   837                           
   838  0070                     ??_PIN_MANAGER_Initialize:	
   839                           ; 0 bytes @ 0x0
   840                           
   841  0070                     ?_SYSTEM_Initialize:	
   842                           ; 0 bytes @ 0x0
   843                           
   844  0070                     ??_SYSTEM_Initialize:	
   845                           ; 0 bytes @ 0x0
   846                           
   847  0070                     ?_main:	
   848                           ; 0 bytes @ 0x0
   849                           
   850  0070                     ?___wmul:	
   851                           ; 0 bytes @ 0x0
   852                           
   853  0070                     ?___lmul:	
   854                           ; 2 bytes @ 0x0
   855                           
   856  0070                     ?___aldiv:	
   857                           ; 4 bytes @ 0x0
   858                           
   859  0070                     ?___almod:	
   860                           ; 4 bytes @ 0x0
   861                           
   862  0070                     ___wmul@multiplier:	
   863                           ; 4 bytes @ 0x0
   864                           
   865  0070                     ___lmul@multiplier:	
   866                           ; 2 bytes @ 0x0
   867                           
   868  0070                     ___aldiv@divisor:	
   869                           ; 4 bytes @ 0x0
   870                           
   871  0070                     ___almod@divisor:	
   872                           ; 4 bytes @ 0x0
   873                           
   874                           
   875                           ; 4 bytes @ 0x0
   876  0070                     	ds	1
   877  0071                     Display_put@display_segment:	
   878                           
   879                           ; 10 bytes @ 0x1
   880  0071                     	ds	1
   881  0072                     ___wmul@multiplicand:	
   882                           
   883                           ; 2 bytes @ 0x2
   884  0072                     	ds	2
   885  0074                     ??___wmul:	
   886  0074                     ___wmul@product:	
   887                           ; 0 bytes @ 0x4
   888                           
   889  0074                     ___lmul@multiplicand:	
   890                           ; 2 bytes @ 0x4
   891                           
   892  0074                     ___aldiv@dividend:	
   893                           ; 4 bytes @ 0x4
   894                           
   895  0074                     ___almod@dividend:	
   896                           ; 4 bytes @ 0x4
   897                           
   898                           
   899                           ; 4 bytes @ 0x4
   900  0074                     	ds	4
   901  0078                     ??___lmul:	
   902  0078                     ??___aldiv:	
   903                           ; 0 bytes @ 0x8
   904                           
   905  0078                     ??___almod:	
   906                           ; 0 bytes @ 0x8
   907                           
   908  0078                     ___lmul@product:	
   909                           ; 0 bytes @ 0x8
   910                           
   911                           
   912                           ; 4 bytes @ 0x8
   913  0078                     	ds	1
   914  0079                     ___almod@counter:	
   915                           
   916                           ; 1 bytes @ 0x9
   917  0079                     	ds	1
   918  007A                     ___almod@sign:	
   919                           
   920                           ; 1 bytes @ 0xA
   921  007A                     	ds	1
   922  007B                     Display_put@dig:	
   923                           
   924                           ; 1 bytes @ 0xB
   925  007B                     	ds	1
   926  007C                     Display_put@i:	
   927                           
   928                           ; 2 bytes @ 0xC
   929  007C                     	ds	2
   930  007E                     ??_main:	
   931                           
   932                           	psect	cstackBANK0
   933  0020                     __pcstackBANK0:	
   934                           ; 0 bytes @ 0xE
   935                           
   936  0020                     ___aldiv@counter:	
   937                           
   938                           ; 1 bytes @ 0x0
   939  0020                     	ds	1
   940  0021                     ___aldiv@sign:	
   941                           
   942                           ; 1 bytes @ 0x1
   943  0021                     	ds	1
   944  0022                     ___aldiv@quotient:	
   945                           
   946                           ; 4 bytes @ 0x2
   947  0022                     	ds	4
   948  0026                     ?_Display_value:	
   949  0026                     Display_value@value:	
   950                           ; 0 bytes @ 0x6
   951                           
   952                           
   953                           ; 2 bytes @ 0x6
   954  0026                     	ds	2
   955  0028                     ??_Display_value:	
   956                           
   957                           ; 0 bytes @ 0x8
   958  0028                     	ds	5
   959  002D                     Display_value@digit:	
   960                           
   961                           ; 1 bytes @ 0xD
   962  002D                     	ds	1
   963  002E                     Display_value@i:	
   964                           
   965                           ; 1 bytes @ 0xE
   966  002E                     	ds	1
   967  002F                     Display_value@digit_34:	
   968                           
   969                           ; 2 bytes @ 0xF
   970  002F                     	ds	2
   971  0031                     Display_value@power_count:	
   972                           
   973                           ; 1 bytes @ 0x11
   974  0031                     	ds	1
   975  0032                     Display_value@num:	
   976                           
   977                           ; 2 bytes @ 0x12
   978  0032                     	ds	2
   979  0034                     Display_value@power:	
   980                           
   981                           ; 4 bytes @ 0x14
   982  0034                     	ds	4
   983  0038                     main@val:	
   984                           
   985                           ; 2 bytes @ 0x18
   986  0038                     	ds	2
   987                           
   988                           	psect	maintext
   989  055F                     __pmaintext:	
   990 ;;
   991 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   992 ;;
   993 ;; *************** function _main *****************
   994 ;; Defined at:
   995 ;;		line 52 in file "main.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  val             2   24[BANK0 ] unsigned int 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;		None               void
  1002 ;; Registers used:
  1003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : B1F/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1
  1009 ;;      Params:         0       0       0
  1010 ;;      Locals:         0       2       0
  1011 ;;      Temps:          0       0       0
  1012 ;;      Totals:         0       2       0
  1013 ;;Total ram usage:        2 bytes
  1014 ;; Hardware stack levels required when called:    2
  1015 ;; This function calls:
  1016 ;;		_Display_value
  1017 ;;		_SYSTEM_Initialize
  1018 ;; This function is called by:
  1019 ;;		Startup code after reset
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           
  1024                           ;psect for function _main
  1025  055F                     _main:	
  1026                           
  1027                           ;main.c: 54: SYSTEM_Initialize();
  1028                           
  1029                           ;incstack = 0
  1030                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1031  055F  253E               	fcall	_SYSTEM_Initialize
  1032                           
  1033                           ;main.c: 70: unsigned int val=10;
  1034  0560  300A               	movlw	10
  1035  0561  0020               	movlb	0	; select bank0
  1036  0562  00B8               	movwf	main@val
  1037  0563  3000               	movlw	0
  1038  0564  00B9               	movwf	main@val+1
  1039                           
  1040                           ;main.c: 71: Display_value(val);
  1041  0565  0839               	movf	main@val+1,w
  1042  0566  00A7               	movwf	Display_value@value+1
  1043  0567  0838               	movf	main@val,w
  1044  0568  00A6               	movwf	Display_value@value
  1045  0569  26F8               	fcall	_Display_value
  1046  056A                     l124:	
  1047                           ;main.c: 73: while (1)
  1048                           
  1049                           
  1050                           ;main.c: 74: {
  1051  056A  2D6A               	goto	l124
  1052  056B                     __end_of_main:	
  1053                           
  1054                           	psect	text1
  1055  053E                     __ptext1:	
  1056 ;; *************** function _SYSTEM_Initialize *****************
  1057 ;; Defined at:
  1058 ;;		line 67 in file "mcc_generated_files/mcc.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;		None               void
  1065 ;; Registers used:
  1066 ;;		wreg, status,2, status,0, pclath, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1
  1072 ;;      Params:         0       0       0
  1073 ;;      Locals:         0       0       0
  1074 ;;      Temps:          0       0       0
  1075 ;;      Totals:         0       0       0
  1076 ;;Total ram usage:        0 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:    1
  1079 ;; This function calls:
  1080 ;;		_ADC_Initialize
  1081 ;;		_OSCILLATOR_Initialize
  1082 ;;		_PIN_MANAGER_Initialize
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           
  1089                           ;psect for function _SYSTEM_Initialize
  1090  053E                     _SYSTEM_Initialize:	
  1091                           
  1092                           ;mcc.c: 68: OSCILLATOR_Initialize();
  1093                           
  1094                           ;incstack = 0
  1095                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1096  053E  2542               	fcall	_OSCILLATOR_Initialize
  1097                           
  1098                           ;mcc.c: 69: PIN_MANAGER_Initialize();
  1099  053F  256B               	fcall	_PIN_MANAGER_Initialize
  1100                           
  1101                           ;mcc.c: 70: ADC_Initialize();
  1102  0540  254D               	fcall	_ADC_Initialize
  1103  0541  0008               	return
  1104  0542                     __end_of_SYSTEM_Initialize:	
  1105                           
  1106                           	psect	text2
  1107  056B                     __ptext2:	
  1108 ;; *************** function _PIN_MANAGER_Initialize *****************
  1109 ;; Defined at:
  1110 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;		None               void
  1117 ;; Registers used:
  1118 ;;		wreg, status,2
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMMON   BANK0   BANK1
  1124 ;;      Params:         0       0       0
  1125 ;;      Locals:         0       0       0
  1126 ;;      Temps:          0       0       0
  1127 ;;      Totals:         0       0       0
  1128 ;;Total ram usage:        0 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		_SYSTEM_Initialize
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           
  1138                           ;psect for function _PIN_MANAGER_Initialize
  1139  056B                     _PIN_MANAGER_Initialize:	
  1140                           
  1141                           ;pin_manager.c: 51: LATA = 0x00;
  1142                           
  1143                           ;incstack = 0
  1144                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1145  056B  0022               	movlb	2	; select bank2
  1146  056C  018C               	clrf	12	;volatile
  1147                           
  1148                           ;pin_manager.c: 52: TRISA = 0x3F;
  1149  056D  303F               	movlw	63
  1150  056E  0021               	movlb	1	; select bank1
  1151  056F  008C               	movwf	12	;volatile
  1152                           
  1153                           ;pin_manager.c: 53: ANSELA = 0x17;
  1154  0570  3017               	movlw	23
  1155  0571  0023               	movlb	3	; select bank3
  1156  0572  008C               	movwf	12	;volatile
  1157                           
  1158                           ;pin_manager.c: 54: WPUA = 0x00;
  1159  0573  0024               	movlb	4	; select bank4
  1160  0574  018C               	clrf	12	;volatile
  1161                           
  1162                           ;pin_manager.c: 56: LATC = 0x10;
  1163  0575  3010               	movlw	16
  1164  0576  0022               	movlb	2	; select bank2
  1165  0577  008E               	movwf	14	;volatile
  1166                           
  1167                           ;pin_manager.c: 57: TRISC = 0x07;
  1168  0578  3007               	movlw	7
  1169  0579  0021               	movlb	1	; select bank1
  1170  057A  008E               	movwf	14	;volatile
  1171                           
  1172                           ;pin_manager.c: 58: ANSELC = 0x07;
  1173  057B  3007               	movlw	7
  1174  057C  0023               	movlb	3	; select bank3
  1175  057D  008E               	movwf	14	;volatile
  1176                           
  1177                           ;pin_manager.c: 60: OPTION_REGbits.nWPUEN = 0x01;
  1178  057E  0021               	movlb	1	; select bank1
  1179  057F  1795               	bsf	21,7	;volatile
  1180                           
  1181                           ;pin_manager.c: 62: APFCON = 0x00;
  1182  0580  0022               	movlb	2	; select bank2
  1183  0581  019D               	clrf	29	;volatile
  1184  0582  0008               	return
  1185  0583                     __end_of_PIN_MANAGER_Initialize:	
  1186                           
  1187                           	psect	text3
  1188  0542                     __ptext3:	
  1189 ;; *************** function _OSCILLATOR_Initialize *****************
  1190 ;; Defined at:
  1191 ;;		line 73 in file "mcc_generated_files/mcc.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;		None
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;		None
  1196 ;; Return value:  Size  Location     Type
  1197 ;;		None               void
  1198 ;; Registers used:
  1199 ;;		wreg, status,2
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMMON   BANK0   BANK1
  1205 ;;      Params:         0       0       0
  1206 ;;      Locals:         0       0       0
  1207 ;;      Temps:          0       0       0
  1208 ;;      Totals:         0       0       0
  1209 ;;Total ram usage:        0 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; This function calls:
  1212 ;;		Nothing
  1213 ;; This function is called by:
  1214 ;;		_SYSTEM_Initialize
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           
  1219                           ;psect for function _OSCILLATOR_Initialize
  1220  0542                     _OSCILLATOR_Initialize:	
  1221                           
  1222                           ;mcc.c: 75: OSCCON = 0x7A;
  1223                           
  1224                           ;incstack = 0
  1225                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1226  0542  307A               	movlw	122
  1227  0543  0021               	movlb	1	; select bank1
  1228  0544  0099               	movwf	25	;volatile
  1229                           
  1230                           ;mcc.c: 77: OSCSTAT = 0x00;
  1231  0545  019A               	clrf	26	;volatile
  1232  0546  0008               	return
  1233  0547                     __end_of_OSCILLATOR_Initialize:	
  1234                           
  1235                           	psect	text4
  1236  054D                     __ptext4:	
  1237 ;; *************** function _ADC_Initialize *****************
  1238 ;; Defined at:
  1239 ;;		line 65 in file "mcc_generated_files/adc.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;		None               void
  1246 ;; Registers used:
  1247 ;;		wreg, status,2
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMMON   BANK0   BANK1
  1253 ;;      Params:         0       0       0
  1254 ;;      Locals:         0       0       0
  1255 ;;      Temps:          0       0       0
  1256 ;;      Totals:         0       0       0
  1257 ;;Total ram usage:        0 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; This function calls:
  1260 ;;		Nothing
  1261 ;; This function is called by:
  1262 ;;		_SYSTEM_Initialize
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           
  1267                           ;psect for function _ADC_Initialize
  1268  054D                     _ADC_Initialize:	
  1269                           
  1270                           ;adc.c: 69: ADCON0 = 0x01;
  1271                           
  1272                           ;incstack = 0
  1273                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  1274  054D  3001               	movlw	1
  1275  054E  0021               	movlb	1	; select bank1
  1276  054F  009D               	movwf	29	;volatile
  1277                           
  1278                           ;adc.c: 72: ADCON1 = 0x00;
  1279  0550  019E               	clrf	30	;volatile
  1280                           
  1281                           ;adc.c: 75: ADCON2 = 0x00;
  1282  0551  019F               	clrf	31	;volatile
  1283                           
  1284                           ;adc.c: 78: ADRESL = 0x00;
  1285  0552  019B               	clrf	27	;volatile
  1286                           
  1287                           ;adc.c: 81: ADRESH = 0x00;
  1288  0553  019C               	clrf	28	;volatile
  1289  0554  0008               	return
  1290  0555                     __end_of_ADC_Initialize:	
  1291                           
  1292                           	psect	text5
  1293  06F8                     __ptext5:	
  1294 ;; *************** function _Display_value *****************
  1295 ;; Defined at:
  1296 ;;		line 11 in file "drv_74hc595/drv_74hc595.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  value           2    6[BANK0 ] unsigned int 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  digit           2   15[BANK0 ] int 
  1301 ;;  digit           1   13[BANK0 ] unsigned char 
  1302 ;;  power           4   20[BANK0 ] long 
  1303 ;;  num             2   18[BANK0 ] unsigned int 
  1304 ;;  power_count     1   17[BANK0 ] unsigned char 
  1305 ;;  i               1   14[BANK0 ] unsigned char 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;		None               void
  1308 ;; Registers used:
  1309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMMON   BANK0   BANK1
  1315 ;;      Params:         0       2       0
  1316 ;;      Locals:         0      11       0
  1317 ;;      Temps:          0       5       0
  1318 ;;      Totals:         0      18       0
  1319 ;;Total ram usage:       18 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    1
  1322 ;; This function calls:
  1323 ;;		_Display_put
  1324 ;;		___aldiv
  1325 ;;		___almod
  1326 ;;		___lmul
  1327 ;;		___wmul
  1328 ;; This function is called by:
  1329 ;;		_main
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           
  1334                           ;psect for function _Display_value
  1335  06F8                     _Display_value:	
  1336                           
  1337                           ;drv_74hc595.c: 13: unsigned int num=value;
  1338                           
  1339                           ;incstack = 0
  1340                           ; Regs used in _Display_value: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1341  06F8  0020               	movlb	0	; select bank0
  1342  06F9  0827               	movf	Display_value@value+1,w
  1343  06FA  00B3               	movwf	Display_value@num+1
  1344  06FB  0826               	movf	Display_value@value,w
  1345  06FC  00B2               	movwf	Display_value@num
  1346                           
  1347                           ;drv_74hc595.c: 14: uint8_t i=0;
  1348  06FD  01AE               	clrf	Display_value@i
  1349                           
  1350                           ;drv_74hc595.c: 15: long power=1;
  1351  06FE  3000               	movlw	0
  1352  06FF  00B7               	movwf	Display_value@power+3
  1353  0700  3000               	movlw	0
  1354  0701  00B6               	movwf	Display_value@power+2
  1355  0702  3000               	movlw	0
  1356  0703  00B5               	movwf	Display_value@power+1
  1357  0704  3001               	movlw	1
  1358  0705  00B4               	movwf	Display_value@power
  1359                           
  1360                           ;drv_74hc595.c: 16: uint8_t power_count=0;
  1361  0706  01B1               	clrf	Display_value@power_count
  1362                           
  1363                           ;drv_74hc595.c: 17: if(num == 0 || num == 1)
  1364  0707  0832               	movf	Display_value@num,w
  1365  0708  0433               	iorwf	Display_value@num+1,w
  1366  0709  1903               	btfsc	3,2
  1367  070A  2F0F               	goto	l909
  1368  070B  0332               	decf	Display_value@num,w
  1369  070C  0433               	iorwf	Display_value@num+1,w
  1370  070D  1D03               	btfss	3,2
  1371  070E  2F35               	goto	l917
  1372  070F                     l909:	
  1373                           
  1374                           ;drv_74hc595.c: 18: {
  1375                           ;drv_74hc595.c: 19: uint8_t digit = num;
  1376  070F  0832               	movf	Display_value@num,w
  1377  0710  00A8               	movwf	??_Display_value
  1378  0711  0828               	movf	??_Display_value,w
  1379  0712  00AD               	movwf	Display_value@digit
  1380                           
  1381                           ;drv_74hc595.c: 20: Display_put(digit);
  1382  0713  082D               	movf	Display_value@digit,w
  1383  0714  25CD               	fcall	_Display_put
  1384                           
  1385                           ;drv_74hc595.c: 21: }
  1386  0715  2FF0               	goto	l29
  1387  0716                     l913:	
  1388                           ;drv_74hc595.c: 22: else
  1389                           ;drv_74hc595.c: 23: {
  1390                           ;drv_74hc595.c: 24: while(num > power)
  1391                           
  1392                           
  1393                           ;drv_74hc595.c: 25: {
  1394                           ;drv_74hc595.c: 26: power*=10;
  1395  0716  3000               	movlw	0
  1396  0717  00F3               	movwf	___lmul@multiplier+3
  1397  0718  3000               	movlw	0
  1398  0719  00F2               	movwf	___lmul@multiplier+2
  1399  071A  3000               	movlw	0
  1400  071B  00F1               	movwf	___lmul@multiplier+1
  1401  071C  300A               	movlw	10
  1402  071D  00F0               	movwf	___lmul@multiplier
  1403  071E  0020               	movlb	0	; select bank0
  1404  071F  0837               	movf	Display_value@power+3,w
  1405  0720  00F7               	movwf	___lmul@multiplicand+3
  1406  0721  0836               	movf	Display_value@power+2,w
  1407  0722  00F6               	movwf	___lmul@multiplicand+2
  1408  0723  0835               	movf	Display_value@power+1,w
  1409  0724  00F5               	movwf	___lmul@multiplicand+1
  1410  0725  0834               	movf	Display_value@power,w
  1411  0726  00F4               	movwf	___lmul@multiplicand
  1412  0727  259E               	fcall	___lmul
  1413  0728  0873               	movf	?___lmul+3,w
  1414  0729  0020               	movlb	0	; select bank0
  1415  072A  00B7               	movwf	Display_value@power+3
  1416  072B  0872               	movf	?___lmul+2,w
  1417  072C  00B6               	movwf	Display_value@power+2
  1418  072D  0871               	movf	?___lmul+1,w
  1419  072E  00B5               	movwf	Display_value@power+1
  1420  072F  0870               	movf	?___lmul,w
  1421  0730  00B4               	movwf	Display_value@power
  1422                           
  1423                           ;drv_74hc595.c: 27: ++power_count;
  1424  0731  3001               	movlw	1
  1425  0732  00A8               	movwf	??_Display_value
  1426  0733  0828               	movf	??_Display_value,w
  1427  0734  07B1               	addwf	Display_value@power_count,f
  1428  0735                     l917:	
  1429  0735  0020               	movlb	0	; select bank0
  1430  0736  0832               	movf	Display_value@num,w
  1431  0737  00A8               	movwf	??_Display_value
  1432  0738  0833               	movf	Display_value@num+1,w
  1433  0739  00A9               	movwf	??_Display_value+1
  1434  073A  01AA               	clrf	??_Display_value+2
  1435  073B  01AB               	clrf	??_Display_value+3
  1436  073C  0837               	movf	Display_value@power+3,w
  1437  073D  3A80               	xorlw	128
  1438  073E  00AC               	movwf	??_Display_value+4
  1439  073F  082B               	movf	??_Display_value+3,w
  1440  0740  3A80               	xorlw	128
  1441  0741  022C               	subwf	??_Display_value+4,w
  1442  0742  1D03               	skipz
  1443  0743  2F4E               	goto	u793
  1444  0744  082A               	movf	??_Display_value+2,w
  1445  0745  0236               	subwf	Display_value@power+2,w
  1446  0746  1D03               	skipz
  1447  0747  2F4E               	goto	u793
  1448  0748  0829               	movf	??_Display_value+1,w
  1449  0749  0235               	subwf	Display_value@power+1,w
  1450  074A  1D03               	skipz
  1451  074B  2F4E               	goto	u793
  1452  074C  0828               	movf	??_Display_value,w
  1453  074D  0234               	subwf	Display_value@power,w
  1454  074E                     u793:	
  1455  074E  1C03               	skipc
  1456  074F  2F16               	goto	l913
  1457                           
  1458                           ;drv_74hc595.c: 28: }
  1459                           ;drv_74hc595.c: 29: if((num % power)!=0) {power/=10;}
  1460  0750  0837               	movf	Display_value@power+3,w
  1461  0751  00F3               	movwf	___almod@divisor+3
  1462  0752  0836               	movf	Display_value@power+2,w
  1463  0753  00F2               	movwf	___almod@divisor+2
  1464  0754  0835               	movf	Display_value@power+1,w
  1465  0755  00F1               	movwf	___almod@divisor+1
  1466  0756  0834               	movf	Display_value@power,w
  1467  0757  00F0               	movwf	___almod@divisor
  1468  0758  0832               	movf	Display_value@num,w
  1469  0759  00F4               	movwf	___almod@dividend
  1470  075A  0833               	movf	Display_value@num+1,w
  1471  075B  00F5               	movwf	___almod@dividend+1
  1472  075C  01F6               	clrf	___almod@dividend+2
  1473  075D  01F7               	clrf	___almod@dividend+3
  1474  075E  2609               	fcall	___almod
  1475  075F  0873               	movf	?___almod+3,w
  1476  0760  0472               	iorwf	?___almod+2,w
  1477  0761  0471               	iorwf	?___almod+1,w
  1478  0762  0470               	iorwf	?___almod,w
  1479  0763  1903               	skipnz
  1480  0764  2F81               	goto	l923
  1481  0765  3000               	movlw	0
  1482  0766  00F3               	movwf	___aldiv@divisor+3
  1483  0767  3000               	movlw	0
  1484  0768  00F2               	movwf	___aldiv@divisor+2
  1485  0769  3000               	movlw	0
  1486  076A  00F1               	movwf	___aldiv@divisor+1
  1487  076B  300A               	movlw	10
  1488  076C  00F0               	movwf	___aldiv@divisor
  1489  076D  0020               	movlb	0	; select bank0
  1490  076E  0837               	movf	Display_value@power+3,w
  1491  076F  00F7               	movwf	___aldiv@dividend+3
  1492  0770  0836               	movf	Display_value@power+2,w
  1493  0771  00F6               	movwf	___aldiv@dividend+2
  1494  0772  0835               	movf	Display_value@power+1,w
  1495  0773  00F5               	movwf	___aldiv@dividend+1
  1496  0774  0834               	movf	Display_value@power,w
  1497  0775  00F4               	movwf	___aldiv@dividend
  1498  0776  2676               	fcall	___aldiv
  1499  0777  0873               	movf	?___aldiv+3,w
  1500  0778  0020               	movlb	0	; select bank0
  1501  0779  00B7               	movwf	Display_value@power+3
  1502  077A  0872               	movf	?___aldiv+2,w
  1503  077B  00B6               	movwf	Display_value@power+2
  1504  077C  0871               	movf	?___aldiv+1,w
  1505  077D  00B5               	movwf	Display_value@power+1
  1506  077E  0870               	movf	?___aldiv,w
  1507  077F  00B4               	movwf	Display_value@power
  1508  0780  2F86               	goto	l939
  1509  0781                     l923:	
  1510                           
  1511                           ;drv_74hc595.c: 30: else{
  1512                           ;drv_74hc595.c: 31: ++power_count;
  1513  0781  3001               	movlw	1
  1514  0782  0020               	movlb	0	; select bank0
  1515  0783  00A8               	movwf	??_Display_value
  1516  0784  0828               	movf	??_Display_value,w
  1517  0785  07B1               	addwf	Display_value@power_count,f
  1518  0786                     l939:	
  1519                           ;drv_74hc595.c: 32: }
  1520                           ;drv_74hc595.c: 34: while(num != 0)
  1521                           
  1522  0786  0832               	movf	Display_value@num,w
  1523  0787  0433               	iorwf	Display_value@num+1,w
  1524  0788  1903               	btfsc	3,2
  1525  0789  2FDF               	goto	l941
  1526                           
  1527                           ;drv_74hc595.c: 35: {
  1528                           ;drv_74hc595.c: 36: int digit = num/power;
  1529  078A  0837               	movf	Display_value@power+3,w
  1530  078B  00F3               	movwf	___aldiv@divisor+3
  1531  078C  0836               	movf	Display_value@power+2,w
  1532  078D  00F2               	movwf	___aldiv@divisor+2
  1533  078E  0835               	movf	Display_value@power+1,w
  1534  078F  00F1               	movwf	___aldiv@divisor+1
  1535  0790  0834               	movf	Display_value@power,w
  1536  0791  00F0               	movwf	___aldiv@divisor
  1537  0792  0832               	movf	Display_value@num,w
  1538  0793  00F4               	movwf	___aldiv@dividend
  1539  0794  0833               	movf	Display_value@num+1,w
  1540  0795  00F5               	movwf	___aldiv@dividend+1
  1541  0796  01F6               	clrf	___aldiv@dividend+2
  1542  0797  01F7               	clrf	___aldiv@dividend+3
  1543  0798  2676               	fcall	___aldiv
  1544  0799  0871               	movf	?___aldiv+1,w
  1545  079A  0020               	movlb	0	; select bank0
  1546  079B  00B0               	movwf	Display_value@digit_34+1
  1547  079C  0870               	movf	?___aldiv,w
  1548  079D  00AF               	movwf	Display_value@digit_34
  1549                           
  1550                           ;drv_74hc595.c: 37: Display_put(digit);
  1551  079E  082F               	movf	Display_value@digit_34,w
  1552  079F  25CD               	fcall	_Display_put
  1553                           
  1554                           ;drv_74hc595.c: 38: if(digit != 0) num = num-digit*power;
  1555  07A0  0020               	movlb	0	; select bank0
  1556  07A1  082F               	movf	Display_value@digit_34,w
  1557  07A2  0430               	iorwf	Display_value@digit_34+1,w
  1558  07A3  1903               	btfsc	3,2
  1559  07A4  2FBC               	goto	l933
  1560  07A5  0830               	movf	Display_value@digit_34+1,w
  1561  07A6  00F1               	movwf	___wmul@multiplier+1
  1562  07A7  082F               	movf	Display_value@digit_34,w
  1563  07A8  00F0               	movwf	___wmul@multiplier
  1564  07A9  0835               	movf	Display_value@power+1,w
  1565  07AA  00F3               	movwf	___wmul@multiplicand+1
  1566  07AB  0834               	movf	Display_value@power,w
  1567  07AC  00F2               	movwf	___wmul@multiplicand
  1568  07AD  2583               	fcall	___wmul
  1569  07AE  0970               	comf	?___wmul,w
  1570  07AF  0020               	movlb	0	; select bank0
  1571  07B0  00A8               	movwf	??_Display_value
  1572  07B1  0971               	comf	?___wmul+1,w
  1573  07B2  00A9               	movwf	??_Display_value+1
  1574  07B3  0AA8               	incf	??_Display_value,f
  1575  07B4  1903               	skipnz
  1576  07B5  0AA9               	incf	??_Display_value+1,f
  1577  07B6  0832               	movf	Display_value@num,w
  1578  07B7  0728               	addwf	??_Display_value,w
  1579  07B8  00B2               	movwf	Display_value@num
  1580  07B9  0833               	movf	Display_value@num+1,w
  1581  07BA  3D29               	addwfc	??_Display_value+1,w
  1582  07BB  00B3               	movwf	Display_value@num+1
  1583  07BC                     l933:	
  1584                           
  1585                           ;drv_74hc595.c: 39: if(power != 1) power/=10;
  1586  07BC  0334               	decf	Display_value@power,w
  1587  07BD  0435               	iorwf	Display_value@power+1,w
  1588  07BE  0436               	iorwf	Display_value@power+2,w
  1589  07BF  0437               	iorwf	Display_value@power+3,w
  1590  07C0  1903               	btfsc	3,2
  1591  07C1  2FDC               	goto	l937
  1592  07C2  3000               	movlw	0
  1593  07C3  00F3               	movwf	___aldiv@divisor+3
  1594  07C4  3000               	movlw	0
  1595  07C5  00F2               	movwf	___aldiv@divisor+2
  1596  07C6  3000               	movlw	0
  1597  07C7  00F1               	movwf	___aldiv@divisor+1
  1598  07C8  300A               	movlw	10
  1599  07C9  00F0               	movwf	___aldiv@divisor
  1600  07CA  0837               	movf	Display_value@power+3,w
  1601  07CB  00F7               	movwf	___aldiv@dividend+3
  1602  07CC  0836               	movf	Display_value@power+2,w
  1603  07CD  00F6               	movwf	___aldiv@dividend+2
  1604  07CE  0835               	movf	Display_value@power+1,w
  1605  07CF  00F5               	movwf	___aldiv@dividend+1
  1606  07D0  0834               	movf	Display_value@power,w
  1607  07D1  00F4               	movwf	___aldiv@dividend
  1608  07D2  2676               	fcall	___aldiv
  1609  07D3  0873               	movf	?___aldiv+3,w
  1610  07D4  0020               	movlb	0	; select bank0
  1611  07D5  00B7               	movwf	Display_value@power+3
  1612  07D6  0872               	movf	?___aldiv+2,w
  1613  07D7  00B6               	movwf	Display_value@power+2
  1614  07D8  0871               	movf	?___aldiv+1,w
  1615  07D9  00B5               	movwf	Display_value@power+1
  1616  07DA  0870               	movf	?___aldiv,w
  1617  07DB  00B4               	movwf	Display_value@power
  1618  07DC                     l937:	
  1619                           
  1620                           ;drv_74hc595.c: 41: --power_count;
  1621  07DC  3001               	movlw	1
  1622  07DD  02B1               	subwf	Display_value@power_count,f
  1623  07DE  2F86               	goto	l939
  1624  07DF                     l941:	
  1625                           
  1626                           ;drv_74hc595.c: 42: }
  1627                           ;drv_74hc595.c: 43: if(power_count>1)
  1628  07DF  3002               	movlw	2
  1629  07E0  0231               	subwf	Display_value@power_count,w
  1630  07E1  1C03               	skipc
  1631  07E2  2FF0               	goto	l29
  1632                           
  1633                           ;drv_74hc595.c: 44: {
  1634                           ;drv_74hc595.c: 45: for(i=0; i<power_count; i++)
  1635  07E3  01AE               	clrf	Display_value@i
  1636  07E4                     l949:	
  1637  07E4  0831               	movf	Display_value@power_count,w
  1638  07E5  022E               	subwf	Display_value@i,w
  1639  07E6  1803               	btfsc	3,0
  1640  07E7  2FF0               	goto	l29
  1641                           
  1642                           ;drv_74hc595.c: 46: {
  1643                           ;drv_74hc595.c: 47: Display_put(0);
  1644  07E8  3000               	movlw	0
  1645  07E9  25CD               	fcall	_Display_put
  1646  07EA  3001               	movlw	1
  1647  07EB  0020               	movlb	0	; select bank0
  1648  07EC  00A8               	movwf	??_Display_value
  1649  07ED  0828               	movf	??_Display_value,w
  1650  07EE  07AE               	addwf	Display_value@i,f
  1651  07EF  2FE4               	goto	l949
  1652  07F0                     l29:	
  1653                           ;drv_74hc595.c: 48: }
  1654                           ;drv_74hc595.c: 49: }
  1655                           ;drv_74hc595.c: 50: }
  1656                           ;drv_74hc595.c: 51: do { LATC4 = 1; } while(0);
  1657                           
  1658  07F0  0022               	movlb	2	; select bank2
  1659  07F1  160E               	bsf	14,4	;volatile
  1660                           
  1661                           ;drv_74hc595.c: 52: do { LATC4 = 0; } while(0);
  1662  07F2  120E               	bcf	14,4	;volatile
  1663  07F3  0008               	return
  1664  07F4                     __end_of_Display_value:	
  1665                           
  1666                           	psect	text6
  1667  0583                     __ptext6:	
  1668 ;; *************** function ___wmul *****************
  1669 ;; Defined at:
  1670 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  multiplier      2    0[COMMON] unsigned int 
  1673 ;;  multiplicand    2    2[COMMON] unsigned int 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  product         2    4[COMMON] unsigned int 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  2    0[COMMON] unsigned int 
  1678 ;; Registers used:
  1679 ;;		wreg, status,2, status,0
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMMON   BANK0   BANK1
  1685 ;;      Params:         4       0       0
  1686 ;;      Locals:         2       0       0
  1687 ;;      Temps:          0       0       0
  1688 ;;      Totals:         6       0       0
  1689 ;;Total ram usage:        6 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; This function calls:
  1692 ;;		Nothing
  1693 ;; This function is called by:
  1694 ;;		_Display_value
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           
  1699                           ;psect for function ___wmul
  1700  0583                     ___wmul:	
  1701                           
  1702                           ;incstack = 0
  1703                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1704  0583  01F4               	clrf	___wmul@product
  1705  0584  01F5               	clrf	___wmul@product+1
  1706  0585                     l801:	
  1707  0585  1C70               	btfss	___wmul@multiplier,0
  1708  0586  2D8B               	goto	l131
  1709  0587  0872               	movf	___wmul@multiplicand,w
  1710  0588  07F4               	addwf	___wmul@product,f
  1711  0589  0873               	movf	___wmul@multiplicand+1,w
  1712  058A  3DF5               	addwfc	___wmul@product+1,f
  1713  058B                     l131:	
  1714  058B  3001               	movlw	1
  1715  058C                     u515:	
  1716  058C  35F2               	lslf	___wmul@multiplicand,f
  1717  058D  0DF3               	rlf	___wmul@multiplicand+1,f
  1718  058E  0B89               	decfsz	9,f
  1719  058F  2D8C               	goto	u515
  1720  0590  3001               	movlw	1
  1721  0591                     u525:	
  1722  0591  36F1               	lsrf	___wmul@multiplier+1,f
  1723  0592  0CF0               	rrf	___wmul@multiplier,f
  1724  0593  0B89               	decfsz	9,f
  1725  0594  2D91               	goto	u525
  1726  0595  0870               	movf	___wmul@multiplier,w
  1727  0596  0471               	iorwf	___wmul@multiplier+1,w
  1728  0597  1D03               	btfss	3,2
  1729  0598  2D85               	goto	l801
  1730  0599  0875               	movf	___wmul@product+1,w
  1731  059A  00F1               	movwf	?___wmul+1
  1732  059B  0874               	movf	___wmul@product,w
  1733  059C  00F0               	movwf	?___wmul
  1734  059D  0008               	return
  1735  059E                     __end_of___wmul:	
  1736                           
  1737                           	psect	text7
  1738  059E                     __ptext7:	
  1739 ;; *************** function ___lmul *****************
  1740 ;; Defined at:
  1741 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  multiplier      4    0[COMMON] unsigned long 
  1744 ;;  multiplicand    4    4[COMMON] unsigned long 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  product         4    8[COMMON] unsigned long 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  4    0[COMMON] unsigned long 
  1749 ;; Registers used:
  1750 ;;		wreg, status,2, status,0
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMMON   BANK0   BANK1
  1756 ;;      Params:         8       0       0
  1757 ;;      Locals:         4       0       0
  1758 ;;      Temps:          0       0       0
  1759 ;;      Totals:        12       0       0
  1760 ;;Total ram usage:       12 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; This function calls:
  1763 ;;		Nothing
  1764 ;; This function is called by:
  1765 ;;		_Display_value
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           
  1770                           ;psect for function ___lmul
  1771  059E                     ___lmul:	
  1772                           
  1773                           ;incstack = 0
  1774                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1775  059E  3000               	movlw	0
  1776  059F  00FB               	movwf	___lmul@product+3
  1777  05A0  3000               	movlw	0
  1778  05A1  00FA               	movwf	___lmul@product+2
  1779  05A2  3000               	movlw	0
  1780  05A3  00F9               	movwf	___lmul@product+1
  1781  05A4  3000               	movlw	0
  1782  05A5  00F8               	movwf	___lmul@product
  1783  05A6                     l815:	
  1784  05A6  1C70               	btfss	___lmul@multiplier,0
  1785  05A7  2DB0               	goto	l819
  1786  05A8  0874               	movf	___lmul@multiplicand,w
  1787  05A9  07F8               	addwf	___lmul@product,f
  1788  05AA  0875               	movf	___lmul@multiplicand+1,w
  1789  05AB  3DF9               	addwfc	___lmul@product+1,f
  1790  05AC  0876               	movf	___lmul@multiplicand+2,w
  1791  05AD  3DFA               	addwfc	___lmul@product+2,f
  1792  05AE  0877               	movf	___lmul@multiplicand+3,w
  1793  05AF  3DFB               	addwfc	___lmul@product+3,f
  1794  05B0                     l819:	
  1795  05B0  3001               	movlw	1
  1796  05B1                     u555:	
  1797  05B1  35F4               	lslf	___lmul@multiplicand,f
  1798  05B2  0DF5               	rlf	___lmul@multiplicand+1,f
  1799  05B3  0DF6               	rlf	___lmul@multiplicand+2,f
  1800  05B4  0DF7               	rlf	___lmul@multiplicand+3,f
  1801  05B5  0B89               	decfsz	9,f
  1802  05B6  2DB1               	goto	u555
  1803  05B7  3001               	movlw	1
  1804  05B8                     u565:	
  1805  05B8  36F3               	lsrf	___lmul@multiplier+3,f
  1806  05B9  0CF2               	rrf	___lmul@multiplier+2,f
  1807  05BA  0CF1               	rrf	___lmul@multiplier+1,f
  1808  05BB  0CF0               	rrf	___lmul@multiplier,f
  1809  05BC  0B89               	decfsz	9,f
  1810  05BD  2DB8               	goto	u565
  1811  05BE  0873               	movf	___lmul@multiplier+3,w
  1812  05BF  0472               	iorwf	___lmul@multiplier+2,w
  1813  05C0  0471               	iorwf	___lmul@multiplier+1,w
  1814  05C1  0470               	iorwf	___lmul@multiplier,w
  1815  05C2  1D03               	skipz
  1816  05C3  2DA6               	goto	l815
  1817  05C4  087B               	movf	___lmul@product+3,w
  1818  05C5  00F3               	movwf	?___lmul+3
  1819  05C6  087A               	movf	___lmul@product+2,w
  1820  05C7  00F2               	movwf	?___lmul+2
  1821  05C8  0879               	movf	___lmul@product+1,w
  1822  05C9  00F1               	movwf	?___lmul+1
  1823  05CA  0878               	movf	___lmul@product,w
  1824  05CB  00F0               	movwf	?___lmul
  1825  05CC  0008               	return
  1826  05CD                     __end_of___lmul:	
  1827                           
  1828                           	psect	text8
  1829  0609                     __ptext8:	
  1830 ;; *************** function ___almod *****************
  1831 ;; Defined at:
  1832 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\almod.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;  divisor         4    0[COMMON] long 
  1835 ;;  dividend        4    4[COMMON] long 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;  sign            1   10[COMMON] unsigned char 
  1838 ;;  counter         1    9[COMMON] unsigned char 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  4    0[COMMON] long 
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1
  1848 ;;      Params:         8       0       0
  1849 ;;      Locals:         2       0       0
  1850 ;;      Temps:          1       0       0
  1851 ;;      Totals:        11       0       0
  1852 ;;Total ram usage:       11 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; This function calls:
  1855 ;;		Nothing
  1856 ;; This function is called by:
  1857 ;;		_Display_value
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           
  1862                           ;psect for function ___almod
  1863  0609                     ___almod:	
  1864                           
  1865                           ;incstack = 0
  1866                           ; Regs used in ___almod: [wreg+status,2+status,0]
  1867  0609  01FA               	clrf	___almod@sign
  1868  060A  1FF7               	btfss	___almod@dividend+3,7
  1869  060B  2E19               	goto	l199
  1870  060C  09F4               	comf	___almod@dividend,f
  1871  060D  09F5               	comf	___almod@dividend+1,f
  1872  060E  09F6               	comf	___almod@dividend+2,f
  1873  060F  09F7               	comf	___almod@dividend+3,f
  1874  0610  0AF4               	incf	___almod@dividend,f
  1875  0611  1903               	skipnz
  1876  0612  0AF5               	incf	___almod@dividend+1,f
  1877  0613  1903               	skipnz
  1878  0614  0AF6               	incf	___almod@dividend+2,f
  1879  0615  1903               	skipnz
  1880  0616  0AF7               	incf	___almod@dividend+3,f
  1881  0617  01FA               	clrf	___almod@sign
  1882  0618  0AFA               	incf	___almod@sign,f
  1883  0619                     l199:	
  1884  0619  1FF3               	btfss	___almod@divisor+3,7
  1885  061A  2E26               	goto	l875
  1886  061B  09F0               	comf	___almod@divisor,f
  1887  061C  09F1               	comf	___almod@divisor+1,f
  1888  061D  09F2               	comf	___almod@divisor+2,f
  1889  061E  09F3               	comf	___almod@divisor+3,f
  1890  061F  0AF0               	incf	___almod@divisor,f
  1891  0620  1903               	skipnz
  1892  0621  0AF1               	incf	___almod@divisor+1,f
  1893  0622  1903               	skipnz
  1894  0623  0AF2               	incf	___almod@divisor+2,f
  1895  0624  1903               	skipnz
  1896  0625  0AF3               	incf	___almod@divisor+3,f
  1897  0626                     l875:	
  1898  0626  0873               	movf	___almod@divisor+3,w
  1899  0627  0472               	iorwf	___almod@divisor+2,w
  1900  0628  0471               	iorwf	___almod@divisor+1,w
  1901  0629  0470               	iorwf	___almod@divisor,w
  1902  062A  1903               	skipnz
  1903  062B  2E5F               	goto	l891
  1904  062C  01F9               	clrf	___almod@counter
  1905  062D  0AF9               	incf	___almod@counter,f
  1906  062E                     l881:	
  1907  062E  1BF3               	btfsc	___almod@divisor+3,7
  1908  062F  2E3C               	goto	l883
  1909  0630  3001               	movlw	1
  1910  0631                     u715:	
  1911  0631  35F0               	lslf	___almod@divisor,f
  1912  0632  0DF1               	rlf	___almod@divisor+1,f
  1913  0633  0DF2               	rlf	___almod@divisor+2,f
  1914  0634  0DF3               	rlf	___almod@divisor+3,f
  1915  0635  0B89               	decfsz	9,f
  1916  0636  2E31               	goto	u715
  1917  0637  3001               	movlw	1
  1918  0638  00F8               	movwf	??___almod
  1919  0639  0878               	movf	??___almod,w
  1920  063A  07F9               	addwf	___almod@counter,f
  1921  063B  2E2E               	goto	l881
  1922  063C                     l883:	
  1923  063C  0873               	movf	___almod@divisor+3,w
  1924  063D  0277               	subwf	___almod@dividend+3,w
  1925  063E  1D03               	skipz
  1926  063F  2E4A               	goto	u735
  1927  0640  0872               	movf	___almod@divisor+2,w
  1928  0641  0276               	subwf	___almod@dividend+2,w
  1929  0642  1D03               	skipz
  1930  0643  2E4A               	goto	u735
  1931  0644  0871               	movf	___almod@divisor+1,w
  1932  0645  0275               	subwf	___almod@dividend+1,w
  1933  0646  1D03               	skipz
  1934  0647  2E4A               	goto	u735
  1935  0648  0870               	movf	___almod@divisor,w
  1936  0649  0274               	subwf	___almod@dividend,w
  1937  064A                     u735:	
  1938  064A  1C03               	skipc
  1939  064B  2E54               	goto	l887
  1940  064C  0870               	movf	___almod@divisor,w
  1941  064D  02F4               	subwf	___almod@dividend,f
  1942  064E  0871               	movf	___almod@divisor+1,w
  1943  064F  3BF5               	subwfb	___almod@dividend+1,f
  1944  0650  0872               	movf	___almod@divisor+2,w
  1945  0651  3BF6               	subwfb	___almod@dividend+2,f
  1946  0652  0873               	movf	___almod@divisor+3,w
  1947  0653  3BF7               	subwfb	___almod@dividend+3,f
  1948  0654                     l887:	
  1949  0654  3001               	movlw	1
  1950  0655                     u745:	
  1951  0655  36F3               	lsrf	___almod@divisor+3,f
  1952  0656  0CF2               	rrf	___almod@divisor+2,f
  1953  0657  0CF1               	rrf	___almod@divisor+1,f
  1954  0658  0CF0               	rrf	___almod@divisor,f
  1955  0659  0B89               	decfsz	9,f
  1956  065A  2E55               	goto	u745
  1957  065B  3001               	movlw	1
  1958  065C  02F9               	subwf	___almod@counter,f
  1959  065D  1D03               	btfss	3,2
  1960  065E  2E3C               	goto	l883
  1961  065F                     l891:	
  1962  065F  087A               	movf	___almod@sign,w
  1963  0660  1903               	btfsc	3,2
  1964  0661  2E6D               	goto	l895
  1965  0662  09F4               	comf	___almod@dividend,f
  1966  0663  09F5               	comf	___almod@dividend+1,f
  1967  0664  09F6               	comf	___almod@dividend+2,f
  1968  0665  09F7               	comf	___almod@dividend+3,f
  1969  0666  0AF4               	incf	___almod@dividend,f
  1970  0667  1903               	skipnz
  1971  0668  0AF5               	incf	___almod@dividend+1,f
  1972  0669  1903               	skipnz
  1973  066A  0AF6               	incf	___almod@dividend+2,f
  1974  066B  1903               	skipnz
  1975  066C  0AF7               	incf	___almod@dividend+3,f
  1976  066D                     l895:	
  1977  066D  0877               	movf	___almod@dividend+3,w
  1978  066E  00F3               	movwf	?___almod+3
  1979  066F  0876               	movf	___almod@dividend+2,w
  1980  0670  00F2               	movwf	?___almod+2
  1981  0671  0875               	movf	___almod@dividend+1,w
  1982  0672  00F1               	movwf	?___almod+1
  1983  0673  0874               	movf	___almod@dividend,w
  1984  0674  00F0               	movwf	?___almod
  1985  0675  0008               	return
  1986  0676                     __end_of___almod:	
  1987                           
  1988                           	psect	text9
  1989  0676                     __ptext9:	
  1990 ;; *************** function ___aldiv *****************
  1991 ;; Defined at:
  1992 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\aldiv.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  divisor         4    0[COMMON] long 
  1995 ;;  dividend        4    4[COMMON] long 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  quotient        4    2[BANK0 ] long 
  1998 ;;  sign            1    1[BANK0 ] unsigned char 
  1999 ;;  counter         1    0[BANK0 ] unsigned char 
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  4    0[COMMON] long 
  2002 ;; Registers used:
  2003 ;;		wreg, status,2, status,0
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMMON   BANK0   BANK1
  2009 ;;      Params:         8       0       0
  2010 ;;      Locals:         0       6       0
  2011 ;;      Temps:          1       0       0
  2012 ;;      Totals:         9       6       0
  2013 ;;Total ram usage:       15 bytes
  2014 ;; Hardware stack levels used:    1
  2015 ;; This function calls:
  2016 ;;		Nothing
  2017 ;; This function is called by:
  2018 ;;		_Display_value
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function ___aldiv
  2024  0676                     ___aldiv:	
  2025                           
  2026                           ;incstack = 0
  2027                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2028  0676  0020               	movlb	0	; select bank0
  2029  0677  01A1               	clrf	___aldiv@sign
  2030  0678  1FF3               	btfss	___aldiv@divisor+3,7
  2031  0679  2E87               	goto	l186
  2032  067A  09F0               	comf	___aldiv@divisor,f
  2033  067B  09F1               	comf	___aldiv@divisor+1,f
  2034  067C  09F2               	comf	___aldiv@divisor+2,f
  2035  067D  09F3               	comf	___aldiv@divisor+3,f
  2036  067E  0AF0               	incf	___aldiv@divisor,f
  2037  067F  1903               	skipnz
  2038  0680  0AF1               	incf	___aldiv@divisor+1,f
  2039  0681  1903               	skipnz
  2040  0682  0AF2               	incf	___aldiv@divisor+2,f
  2041  0683  1903               	skipnz
  2042  0684  0AF3               	incf	___aldiv@divisor+3,f
  2043  0685  01A1               	clrf	___aldiv@sign
  2044  0686  0AA1               	incf	___aldiv@sign,f
  2045  0687                     l186:	
  2046  0687  1FF7               	btfss	___aldiv@dividend+3,7
  2047  0688  2E98               	goto	l837
  2048  0689  09F4               	comf	___aldiv@dividend,f
  2049  068A  09F5               	comf	___aldiv@dividend+1,f
  2050  068B  09F6               	comf	___aldiv@dividend+2,f
  2051  068C  09F7               	comf	___aldiv@dividend+3,f
  2052  068D  0AF4               	incf	___aldiv@dividend,f
  2053  068E  1903               	skipnz
  2054  068F  0AF5               	incf	___aldiv@dividend+1,f
  2055  0690  1903               	skipnz
  2056  0691  0AF6               	incf	___aldiv@dividend+2,f
  2057  0692  1903               	skipnz
  2058  0693  0AF7               	incf	___aldiv@dividend+3,f
  2059  0694  3001               	movlw	1
  2060  0695  00F8               	movwf	??___aldiv
  2061  0696  0878               	movf	??___aldiv,w
  2062  0697  06A1               	xorwf	___aldiv@sign,f
  2063  0698                     l837:	
  2064  0698  3000               	movlw	0
  2065  0699  00A5               	movwf	___aldiv@quotient+3
  2066  069A  3000               	movlw	0
  2067  069B  00A4               	movwf	___aldiv@quotient+2
  2068  069C  3000               	movlw	0
  2069  069D  00A3               	movwf	___aldiv@quotient+1
  2070  069E  3000               	movlw	0
  2071  069F  00A2               	movwf	___aldiv@quotient
  2072  06A0  0873               	movf	___aldiv@divisor+3,w
  2073  06A1  0472               	iorwf	___aldiv@divisor+2,w
  2074  06A2  0471               	iorwf	___aldiv@divisor+1,w
  2075  06A3  0470               	iorwf	___aldiv@divisor,w
  2076  06A4  1903               	skipnz
  2077  06A5  2EE1               	goto	l859
  2078  06A6  01A0               	clrf	___aldiv@counter
  2079  06A7  0AA0               	incf	___aldiv@counter,f
  2080  06A8                     l845:	
  2081  06A8  1BF3               	btfsc	___aldiv@divisor+3,7
  2082  06A9  2EB6               	goto	l847
  2083  06AA  3001               	movlw	1
  2084  06AB                     u615:	
  2085  06AB  35F0               	lslf	___aldiv@divisor,f
  2086  06AC  0DF1               	rlf	___aldiv@divisor+1,f
  2087  06AD  0DF2               	rlf	___aldiv@divisor+2,f
  2088  06AE  0DF3               	rlf	___aldiv@divisor+3,f
  2089  06AF  0B89               	decfsz	9,f
  2090  06B0  2EAB               	goto	u615
  2091  06B1  3001               	movlw	1
  2092  06B2  00F8               	movwf	??___aldiv
  2093  06B3  0878               	movf	??___aldiv,w
  2094  06B4  07A0               	addwf	___aldiv@counter,f
  2095  06B5  2EA8               	goto	l845
  2096  06B6                     l847:	
  2097  06B6  3001               	movlw	1
  2098  06B7                     u635:	
  2099  06B7  35A2               	lslf	___aldiv@quotient,f
  2100  06B8  0DA3               	rlf	___aldiv@quotient+1,f
  2101  06B9  0DA4               	rlf	___aldiv@quotient+2,f
  2102  06BA  0DA5               	rlf	___aldiv@quotient+3,f
  2103  06BB  0B89               	decfsz	9,f
  2104  06BC  2EB7               	goto	u635
  2105  06BD  0873               	movf	___aldiv@divisor+3,w
  2106  06BE  0277               	subwf	___aldiv@dividend+3,w
  2107  06BF  1D03               	skipz
  2108  06C0  2ECB               	goto	u645
  2109  06C1  0872               	movf	___aldiv@divisor+2,w
  2110  06C2  0276               	subwf	___aldiv@dividend+2,w
  2111  06C3  1D03               	skipz
  2112  06C4  2ECB               	goto	u645
  2113  06C5  0871               	movf	___aldiv@divisor+1,w
  2114  06C6  0275               	subwf	___aldiv@dividend+1,w
  2115  06C7  1D03               	skipz
  2116  06C8  2ECB               	goto	u645
  2117  06C9  0870               	movf	___aldiv@divisor,w
  2118  06CA  0274               	subwf	___aldiv@dividend,w
  2119  06CB                     u645:	
  2120  06CB  1C03               	skipc
  2121  06CC  2ED6               	goto	l855
  2122  06CD  0870               	movf	___aldiv@divisor,w
  2123  06CE  02F4               	subwf	___aldiv@dividend,f
  2124  06CF  0871               	movf	___aldiv@divisor+1,w
  2125  06D0  3BF5               	subwfb	___aldiv@dividend+1,f
  2126  06D1  0872               	movf	___aldiv@divisor+2,w
  2127  06D2  3BF6               	subwfb	___aldiv@dividend+2,f
  2128  06D3  0873               	movf	___aldiv@divisor+3,w
  2129  06D4  3BF7               	subwfb	___aldiv@dividend+3,f
  2130  06D5  1422               	bsf	___aldiv@quotient,0
  2131  06D6                     l855:	
  2132  06D6  3001               	movlw	1
  2133  06D7                     u655:	
  2134  06D7  36F3               	lsrf	___aldiv@divisor+3,f
  2135  06D8  0CF2               	rrf	___aldiv@divisor+2,f
  2136  06D9  0CF1               	rrf	___aldiv@divisor+1,f
  2137  06DA  0CF0               	rrf	___aldiv@divisor,f
  2138  06DB  0B89               	decfsz	9,f
  2139  06DC  2ED7               	goto	u655
  2140  06DD  3001               	movlw	1
  2141  06DE  02A0               	subwf	___aldiv@counter,f
  2142  06DF  1D03               	btfss	3,2
  2143  06E0  2EB6               	goto	l847
  2144  06E1                     l859:	
  2145  06E1  0821               	movf	___aldiv@sign,w
  2146  06E2  1903               	btfsc	3,2
  2147  06E3  2EEF               	goto	l863
  2148  06E4  09A2               	comf	___aldiv@quotient,f
  2149  06E5  09A3               	comf	___aldiv@quotient+1,f
  2150  06E6  09A4               	comf	___aldiv@quotient+2,f
  2151  06E7  09A5               	comf	___aldiv@quotient+3,f
  2152  06E8  0AA2               	incf	___aldiv@quotient,f
  2153  06E9  1903               	skipnz
  2154  06EA  0AA3               	incf	___aldiv@quotient+1,f
  2155  06EB  1903               	skipnz
  2156  06EC  0AA4               	incf	___aldiv@quotient+2,f
  2157  06ED  1903               	skipnz
  2158  06EE  0AA5               	incf	___aldiv@quotient+3,f
  2159  06EF                     l863:	
  2160  06EF  0825               	movf	___aldiv@quotient+3,w
  2161  06F0  00F3               	movwf	?___aldiv+3
  2162  06F1  0824               	movf	___aldiv@quotient+2,w
  2163  06F2  00F2               	movwf	?___aldiv+2
  2164  06F3  0823               	movf	___aldiv@quotient+1,w
  2165  06F4  00F1               	movwf	?___aldiv+1
  2166  06F5  0822               	movf	___aldiv@quotient,w
  2167  06F6  00F0               	movwf	?___aldiv
  2168  06F7  0008               	return
  2169  06F8                     __end_of___aldiv:	
  2170                           
  2171                           	psect	text10
  2172  05CD                     __ptext10:	
  2173 ;; *************** function _Display_put *****************
  2174 ;; Defined at:
  2175 ;;		line 54 in file "drv_74hc595/drv_74hc595.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  dig             1    wreg     unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  dig             1   11[COMMON] unsigned char 
  2180 ;;  display_segm   10    1[COMMON] unsigned char [10]
  2181 ;;  i               2   12[COMMON] int 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;		None               void
  2184 ;; Registers used:
  2185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMMON   BANK0   BANK1
  2191 ;;      Params:         0       0       0
  2192 ;;      Locals:        13       0       0
  2193 ;;      Temps:          1       0       0
  2194 ;;      Totals:        14       0       0
  2195 ;;Total ram usage:       14 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_Display_value
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           
  2205                           ;psect for function _Display_put
  2206  05CD                     _Display_put:	
  2207                           
  2208                           ;incstack = 0
  2209                           ; Regs used in _Display_put: [wreg-fsr1h+status,2+status,0]
  2210                           ;Display_put@dig stored from wreg
  2211  05CD  00FB               	movwf	Display_put@dig
  2212                           
  2213                           ;drv_74hc595.c: 56: uint8_t display_segment[]={0b11111100,0b01100000,0b11011010,0b111100
      +                          10,0b01100110,0b10110110,0b10111110,0b11100000,0b11111110,0b11110110};
  2214  05CE  303A               	movlw	low Display_put@F2972
  2215  05CF  0086               	movwf	6
  2216  05D0  3000               	movlw	high Display_put@F2972
  2217  05D1  0087               	movwf	7
  2218  05D2  3071               	movlw	low Display_put@display_segment
  2219  05D3  0084               	movwf	4
  2220  05D4  3000               	movlw	high Display_put@display_segment
  2221  05D5  0085               	movwf	5
  2222  05D6  300A               	movlw	10
  2223  05D7  00F0               	movwf	??_Display_put
  2224  05D8                     u440:	
  2225  05D8  0016               	moviw fsr1++
  2226  05D9  001A               	movwi fsr0++
  2227  05DA  0BF0               	decfsz	??_Display_put,f
  2228  05DB  2DD8               	goto	u440
  2229                           
  2230                           ;drv_74hc595.c: 57: int i=0;
  2231  05DC  01FC               	clrf	Display_put@i
  2232  05DD  01FD               	clrf	Display_put@i+1
  2233                           
  2234                           ;drv_74hc595.c: 58: do { LATC5 = 0; } while(0);
  2235  05DE  0022               	movlb	2	; select bank2
  2236  05DF  128E               	bcf	14,5	;volatile
  2237                           
  2238                           ;drv_74hc595.c: 59: do { LATC4 = 0; } while(0);
  2239  05E0  120E               	bcf	14,4	;volatile
  2240                           
  2241                           ;drv_74hc595.c: 60: for(i=0; i<8; i++)
  2242  05E1  01FC               	clrf	Display_put@i
  2243  05E2  01FD               	clrf	Display_put@i+1
  2244  05E3                     L1:	
  2245  05E3  087D               	movf	Display_put@i+1,w
  2246  05E4  3A80               	xorlw	128
  2247  05E5  00F0               	movwf	??_Display_put
  2248  05E6  3080               	movlw	128
  2249  05E7  0270               	subwf	??_Display_put,w
  2250  05E8  3008               	movlw	8
  2251  05E9  1903               	btfsc	3,2
  2252  05EA  027C               	subwf	Display_put@i,w
  2253  05EB  1803               	btfsc	3,0
  2254  05EC  0008               	return
  2255                           
  2256                           ;drv_74hc595.c: 61: {
  2257                           ;drv_74hc595.c: 62: RC3 = ((display_segment[dig] & (1<<i))==0)?0:1;
  2258  05ED  087B               	movf	Display_put@dig,w
  2259  05EE  3E71               	addlw	(low (Display_put@display_segment| 0))& (0+255)
  2260  05EF  0086               	movwf	6
  2261  05F0  0187               	clrf	7
  2262  05F1  3001               	movlw	1
  2263  05F2  00F0               	movwf	??_Display_put
  2264  05F3  0A7C               	incf	Display_put@i,w
  2265  05F4  2DF6               	goto	u464
  2266  05F5                     u465:	
  2267  05F5  35F0               	lslf	??_Display_put,f
  2268  05F6                     u464:	
  2269  05F6  0B89               	decfsz	9,f
  2270  05F7  2DF5               	goto	u465
  2271  05F8  0870               	movf	??_Display_put,w
  2272  05F9  0501               	andwf	1,w
  2273  05FA  1903               	btfsc	3,2
  2274  05FB  2DFF               	goto	u470
  2275  05FC  0020               	movlb	0	; select bank0
  2276  05FD  158E               	bsf	14,3	;volatile
  2277  05FE  2E01               	goto	l761
  2278  05FF                     u470:	
  2279  05FF  0020               	movlb	0	; select bank0
  2280  0600  118E               	bcf	14,3	;volatile
  2281  0601                     l761:	
  2282                           ;drv_74hc595.c: 63: do { LATC5 = 1; } while(0);
  2283                           
  2284  0601  0022               	movlb	2	; select bank2
  2285  0602  168E               	bsf	14,5	;volatile
  2286                           
  2287                           ;drv_74hc595.c: 64: do { LATC5 = 0; } while(0);
  2288  0603  128E               	bcf	14,5	;volatile
  2289  0604  3001               	movlw	1
  2290  0605  07FC               	addwf	Display_put@i,f
  2291  0606  3000               	movlw	0
  2292  0607  3DFD               	addwfc	Display_put@i+1,f
  2293  0608  2DE3               	goto	L1
  2294  0609                     __end_of_Display_put:	
  2295  007E                     btemp	set	126	;btemp
  2296  007E                     wtemp	set	126
  2297  007E                     wtemp0	set	126
  2298  0080                     wtemp1	set	128
  2299  0082                     wtemp2	set	130
  2300  0084                     wtemp3	set	132
  2301  0086                     wtemp4	set	134
  2302  0088                     wtemp5	set	136
  2303  007F                     wtemp6	set	127
  2304  007E                     ttemp	set	126
  2305  007E                     ttemp0	set	126
  2306  0081                     ttemp1	set	129
  2307  0084                     ttemp2	set	132
  2308  0087                     ttemp3	set	135
  2309  007F                     ttemp4	set	127
  2310  007E                     ltemp	set	126
  2311  007E                     ltemp0	set	126
  2312  0082                     ltemp1	set	130
  2313  0086                     ltemp2	set	134
  2314  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     26      36
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _Display_value->_Display_put

Critical Paths under _main in BANK0

    _main->_Display_value
    _Display_value->___aldiv

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2020
                                             24 BANK0      2     2      0
                      _Display_value
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display_value                                       18    16      2    1997
                                              6 BANK0     18    16      2
                        _Display_put
                            ___aldiv
                            ___almod
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     178
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     178
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             11     3      8     382
                                              0 COMMON    11     3      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     558
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _Display_put                                         14    14      0     115
                                              0 COMMON    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display_value
     _Display_put
     ___aldiv
     ___almod
     ___lmul
     ___wmul
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      32       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1A      24       6       45.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      32       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Nov 24 15:52:57 2015

                  ??_Display_put 0070                  ??_Display_value 0028                      __CFG_CP$OFF 0000  
                             l29 07F0              ___wmul@multiplicand 0072                              l131 058B  
                            l124 056A                              l186 0687                              l199 0619  
                            l801 0585                              l815 05A6                              l761 0601  
                            l913 0716                              l819 05B0                              l923 0781  
                            l845 06A8                              l837 0698                              l941 07DF  
                            l933 07BC                              l917 0735                              l909 070F  
                            l863 06EF                              l855 06D6                              l847 06B6  
                            l881 062E                              l937 07DC                              l859 06E1  
                            l883 063C                              l891 065F                              l875 0626  
                            l939 0786                              l949 07E4                              l895 066D  
                            l887 0654                              _RC3 0073                              u440 05D8  
                            u515 058C                              u525 0591                              u470 05FF  
                            u615 06AB                              u464 05F6                              u465 05F5  
                            u635 06B7                              u715 0631                              u555 05B1  
                            u645 06CB                              u565 05B8                              u655 06D7  
                            u735 064A                              u745 0655                              u793 074E  
                   __CFG_BORV$LO 0000                              wreg 0009                     __CFG_LVP$OFF 0000  
                           _LATA 010C                             _LATC 010E                             _WPUA 020C  
                   __CFG_WRT$OFF 0000                             _main 055F                             fsr0h 0005  
                           fsr1h 0007                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                    __CFG_BOREN$ON 0000  
                           ltemp 007E                             start 0001                             ttemp 007E  
                           wtemp 007E   __size_of_OSCILLATOR_Initialize 0005    __end_of_OSCILLATOR_Initialize 0547  
                __end_of___aldiv 06F8                  __end_of___almod 0676                            ?_main 0070  
            __end_of_Display_put 0609                    __CFG_WDTE$OFF 0000                            _LATC4 0874  
                          _LATC5 0875                            _TRISA 008C                            _TRISC 008E  
            ___lmul@multiplicand 0074                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                            ttemp0 007E  
                          ttemp1 0081                            ttemp2 0084                            ttemp3 0087  
                          ttemp4 007F                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
                 __CFG_MCLRE$OFF 0000                  __initialization 07F4                     __end_of_main 056B  
                 __CFG_LPBOR$OFF 0000                           ??_main 007E                           _ADCON0 009D  
                         _ADCON1 009E                           _ADCON2 009F                           _ADRESH 009C  
                         _ADRESL 009B                           _APFCON 011D                           _ANSELA 018C  
                         _ANSELC 018E                           _OSCCON 0099         Display_value@power_count 0031  
                 __CFG_PWRTE$OFF 0000                      _Display_put 05CD                           ___lmul 059E  
                      ??___aldiv 0078                        ??___almod 0078                           ___wmul 0583  
                 __CFG_STVREN$ON 0000                 Display_put@F2972 003A                 Display_value@num 0032  
              _SYSTEM_Initialize 053E          __end_of__initialization 07FE               ?_SYSTEM_Initialize 0070  
                 __pcstackCOMMON 0070                     __pidataBANK0 0555              ??_SYSTEM_Initialize 0070  
                 _OPTION_REGbits 0095        __end_of_SYSTEM_Initialize 0542                       __pmaintext 055F  
                        ?___lmul 0070                          ?___wmul 0070            __end_of_Display_value 07F4  
                 ___lmul@product 0078          __size_of_ADC_Initialize 0008                          _OSCSTAT 009A  
                        ___aldiv 0676                          ___almod 0609                  __size_of___lmul 002F  
                __size_of___wmul 001B                          __ptext1 053E                          __ptext2 056B  
                        __ptext3 0542                          __ptext4 054D                          __ptext5 06F8  
                        __ptext6 0583                          __ptext7 059E                          __ptext8 0609  
                        __ptext9 0676            _OSCILLATOR_Initialize 0542                 ___aldiv@dividend 0074  
       ??_PIN_MANAGER_Initialize 0070       __size_of_SYSTEM_Initialize 0004                          main@val 0038  
           end_of_initialization 07FE                          init_ram 0547                          initloop 0548  
                   ?_Display_put 0070                 ___aldiv@quotient 0022                 __CFG_FOSC$INTOSC 0000  
                 __end_of___lmul 05CD                   __end_of___wmul 059E       Display_put@display_segment 0071  
                 _ADC_Initialize 054D           ?_OSCILLATOR_Initialize 0070              start_initialization 07F4  
__size_of_PIN_MANAGER_Initialize 0018                         ??___lmul 0078                         ??___wmul 0074  
          Display_value@digit_34 002F           __end_of_ADC_Initialize 0555                      __pdataBANK0 003A  
                      ___latbits 0000                    __pcstackBANK0 0020           _PIN_MANAGER_Initialize 056B  
                       ?___aldiv 0070                         ?___almod 0070                  ?_ADC_Initialize 0070  
           __size_of_Display_put 003C                 ___almod@dividend 0074                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020           __size_of_Display_value 00FC                   ___wmul@product 0074  
                     _ADCON0bits 009D                ___wmul@multiplier 0070                ___lmul@multiplier 0070  
        ??_OSCILLATOR_Initialize 0070                   Display_value@i 002E                   Display_put@dig 007B  
               __size_of___aldiv 0082                 __size_of___almod 006D                    _Display_value 06F8  
                       __ptext10 05CD                  ___almod@divisor 0070                  ___almod@counter 0079  
                  __size_of_main 000C                   ?_Display_value 0026          ?_PIN_MANAGER_Initialize 0070  
              __CFG_CLKOUTEN$OFF 0000                 ??_ADC_Initialize 0070               Display_value@digit 002D  
                   Display_put@i 007C               Display_value@value 0026               Display_value@power 0034  
                   ___aldiv@sign 0021   __end_of_PIN_MANAGER_Initialize 0583                     ___almod@sign 007A  
