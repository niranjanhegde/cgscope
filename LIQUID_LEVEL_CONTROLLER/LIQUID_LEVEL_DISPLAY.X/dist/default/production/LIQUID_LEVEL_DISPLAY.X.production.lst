

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Dec 01 15:50:30 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     	;# 
    23  0001                     	;# 
    24  0002                     	;# 
    25  0003                     	;# 
    26  0004                     	;# 
    27  0005                     	;# 
    28  0006                     	;# 
    29  0007                     	;# 
    30  0008                     	;# 
    31  0009                     	;# 
    32  000A                     	;# 
    33  000B                     	;# 
    34  000C                     	;# 
    35  000E                     	;# 
    36  0011                     	;# 
    37  0012                     	;# 
    38  0013                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  008C                     	;# 
    49  008E                     	;# 
    50  0091                     	;# 
    51  0092                     	;# 
    52  0093                     	;# 
    53  0095                     	;# 
    54  0096                     	;# 
    55  0097                     	;# 
    56  0099                     	;# 
    57  009A                     	;# 
    58  009B                     	;# 
    59  009B                     	;# 
    60  009C                     	;# 
    61  009D                     	;# 
    62  009E                     	;# 
    63  009F                     	;# 
    64  010C                     	;# 
    65  010E                     	;# 
    66  0111                     	;# 
    67  0112                     	;# 
    68  0113                     	;# 
    69  0114                     	;# 
    70  0115                     	;# 
    71  0116                     	;# 
    72  0117                     	;# 
    73  0118                     	;# 
    74  0119                     	;# 
    75  011D                     	;# 
    76  018C                     	;# 
    77  018E                     	;# 
    78  0191                     	;# 
    79  0191                     	;# 
    80  0192                     	;# 
    81  0193                     	;# 
    82  0193                     	;# 
    83  0194                     	;# 
    84  0195                     	;# 
    85  0196                     	;# 
    86  0197                     	;# 
    87  020C                     	;# 
    88  0211                     	;# 
    89  0211                     	;# 
    90  0212                     	;# 
    91  0212                     	;# 
    92  0213                     	;# 
    93  0213                     	;# 
    94  0214                     	;# 
    95  0214                     	;# 
    96  0215                     	;# 
    97  0215                     	;# 
    98  0215                     	;# 
    99  0216                     	;# 
   100  0216                     	;# 
   101  0217                     	;# 
   102  0217                     	;# 
   103  0391                     	;# 
   104  0392                     	;# 
   105  0393                     	;# 
   106  0498                     	;# 
   107  0498                     	;# 
   108  0499                     	;# 
   109  049A                     	;# 
   110  049B                     	;# 
   111  049B                     	;# 
   112  049C                     	;# 
   113  049D                     	;# 
   114  049E                     	;# 
   115  049F                     	;# 
   116  0611                     	;# 
   117  0612                     	;# 
   118  0613                     	;# 
   119  0613                     	;# 
   120  0614                     	;# 
   121  0615                     	;# 
   122  0616                     	;# 
   123  0616                     	;# 
   124  0617                     	;# 
   125  0618                     	;# 
   126  0619                     	;# 
   127  0619                     	;# 
   128  061A                     	;# 
   129  061B                     	;# 
   130  061C                     	;# 
   131  061C                     	;# 
   132  0691                     	;# 
   133  0692                     	;# 
   134  0693                     	;# 
   135  0694                     	;# 
   136  0695                     	;# 
   137  0F0F                     	;# 
   138  0F10                     	;# 
   139  0F11                     	;# 
   140  0F12                     	;# 
   141  0F13                     	;# 
   142  0F14                     	;# 
   143  0F15                     	;# 
   144  0F16                     	;# 
   145  0F17                     	;# 
   146  0F18                     	;# 
   147  0F19                     	;# 
   148  0F1A                     	;# 
   149  0F1B                     	;# 
   150  0F1C                     	;# 
   151  0F1D                     	;# 
   152  0F1E                     	;# 
   153  0F1F                     	;# 
   154  0FE3                     	;# 
   155  0FE4                     	;# 
   156  0FE5                     	;# 
   157  0FE6                     	;# 
   158  0FE7                     	;# 
   159  0FE8                     	;# 
   160  0FE9                     	;# 
   161  0FEA                     	;# 
   162  0FEB                     	;# 
   163  0FED                     	;# 
   164  0FEE                     	;# 
   165  0FEF                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000E                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0015                     	;# 
   184  0016                     	;# 
   185  0016                     	;# 
   186  0017                     	;# 
   187  0018                     	;# 
   188  0019                     	;# 
   189  001A                     	;# 
   190  001B                     	;# 
   191  001C                     	;# 
   192  008C                     	;# 
   193  008E                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  010C                     	;# 
   209  010E                     	;# 
   210  0111                     	;# 
   211  0112                     	;# 
   212  0113                     	;# 
   213  0114                     	;# 
   214  0115                     	;# 
   215  0116                     	;# 
   216  0117                     	;# 
   217  0118                     	;# 
   218  0119                     	;# 
   219  011D                     	;# 
   220  018C                     	;# 
   221  018E                     	;# 
   222  0191                     	;# 
   223  0191                     	;# 
   224  0192                     	;# 
   225  0193                     	;# 
   226  0193                     	;# 
   227  0194                     	;# 
   228  0195                     	;# 
   229  0196                     	;# 
   230  0197                     	;# 
   231  020C                     	;# 
   232  0211                     	;# 
   233  0211                     	;# 
   234  0212                     	;# 
   235  0212                     	;# 
   236  0213                     	;# 
   237  0213                     	;# 
   238  0214                     	;# 
   239  0214                     	;# 
   240  0215                     	;# 
   241  0215                     	;# 
   242  0215                     	;# 
   243  0216                     	;# 
   244  0216                     	;# 
   245  0217                     	;# 
   246  0217                     	;# 
   247  0391                     	;# 
   248  0392                     	;# 
   249  0393                     	;# 
   250  0498                     	;# 
   251  0498                     	;# 
   252  0499                     	;# 
   253  049A                     	;# 
   254  049B                     	;# 
   255  049B                     	;# 
   256  049C                     	;# 
   257  049D                     	;# 
   258  049E                     	;# 
   259  049F                     	;# 
   260  0611                     	;# 
   261  0612                     	;# 
   262  0613                     	;# 
   263  0613                     	;# 
   264  0614                     	;# 
   265  0615                     	;# 
   266  0616                     	;# 
   267  0616                     	;# 
   268  0617                     	;# 
   269  0618                     	;# 
   270  0619                     	;# 
   271  0619                     	;# 
   272  061A                     	;# 
   273  061B                     	;# 
   274  061C                     	;# 
   275  061C                     	;# 
   276  0691                     	;# 
   277  0692                     	;# 
   278  0693                     	;# 
   279  0694                     	;# 
   280  0695                     	;# 
   281  0F0F                     	;# 
   282  0F10                     	;# 
   283  0F11                     	;# 
   284  0F12                     	;# 
   285  0F13                     	;# 
   286  0F14                     	;# 
   287  0F15                     	;# 
   288  0F16                     	;# 
   289  0F17                     	;# 
   290  0F18                     	;# 
   291  0F19                     	;# 
   292  0F1A                     	;# 
   293  0F1B                     	;# 
   294  0F1C                     	;# 
   295  0F1D                     	;# 
   296  0F1E                     	;# 
   297  0F1F                     	;# 
   298  0FE3                     	;# 
   299  0FE4                     	;# 
   300  0FE5                     	;# 
   301  0FE6                     	;# 
   302  0FE7                     	;# 
   303  0FE8                     	;# 
   304  0FE9                     	;# 
   305  0FEA                     	;# 
   306  0FEB                     	;# 
   307  0FED                     	;# 
   308  0FEE                     	;# 
   309  0FEF                     	;# 
   310  0000                     	;# 
   311  0001                     	;# 
   312  0002                     	;# 
   313  0003                     	;# 
   314  0004                     	;# 
   315  0005                     	;# 
   316  0006                     	;# 
   317  0007                     	;# 
   318  0008                     	;# 
   319  0009                     	;# 
   320  000A                     	;# 
   321  000B                     	;# 
   322  000C                     	;# 
   323  000E                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  008C                     	;# 
   337  008E                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  010C                     	;# 
   353  010E                     	;# 
   354  0111                     	;# 
   355  0112                     	;# 
   356  0113                     	;# 
   357  0114                     	;# 
   358  0115                     	;# 
   359  0116                     	;# 
   360  0117                     	;# 
   361  0118                     	;# 
   362  0119                     	;# 
   363  011D                     	;# 
   364  018C                     	;# 
   365  018E                     	;# 
   366  0191                     	;# 
   367  0191                     	;# 
   368  0192                     	;# 
   369  0193                     	;# 
   370  0193                     	;# 
   371  0194                     	;# 
   372  0195                     	;# 
   373  0196                     	;# 
   374  0197                     	;# 
   375  020C                     	;# 
   376  0211                     	;# 
   377  0211                     	;# 
   378  0212                     	;# 
   379  0212                     	;# 
   380  0213                     	;# 
   381  0213                     	;# 
   382  0214                     	;# 
   383  0214                     	;# 
   384  0215                     	;# 
   385  0215                     	;# 
   386  0215                     	;# 
   387  0216                     	;# 
   388  0216                     	;# 
   389  0217                     	;# 
   390  0217                     	;# 
   391  0391                     	;# 
   392  0392                     	;# 
   393  0393                     	;# 
   394  0498                     	;# 
   395  0498                     	;# 
   396  0499                     	;# 
   397  049A                     	;# 
   398  049B                     	;# 
   399  049B                     	;# 
   400  049C                     	;# 
   401  049D                     	;# 
   402  049E                     	;# 
   403  049F                     	;# 
   404  0611                     	;# 
   405  0612                     	;# 
   406  0613                     	;# 
   407  0613                     	;# 
   408  0614                     	;# 
   409  0615                     	;# 
   410  0616                     	;# 
   411  0616                     	;# 
   412  0617                     	;# 
   413  0618                     	;# 
   414  0619                     	;# 
   415  0619                     	;# 
   416  061A                     	;# 
   417  061B                     	;# 
   418  061C                     	;# 
   419  061C                     	;# 
   420  0691                     	;# 
   421  0692                     	;# 
   422  0693                     	;# 
   423  0694                     	;# 
   424  0695                     	;# 
   425  0F0F                     	;# 
   426  0F10                     	;# 
   427  0F11                     	;# 
   428  0F12                     	;# 
   429  0F13                     	;# 
   430  0F14                     	;# 
   431  0F15                     	;# 
   432  0F16                     	;# 
   433  0F17                     	;# 
   434  0F18                     	;# 
   435  0F19                     	;# 
   436  0F1A                     	;# 
   437  0F1B                     	;# 
   438  0F1C                     	;# 
   439  0F1D                     	;# 
   440  0F1E                     	;# 
   441  0F1F                     	;# 
   442  0FE3                     	;# 
   443  0FE4                     	;# 
   444  0FE5                     	;# 
   445  0FE6                     	;# 
   446  0FE7                     	;# 
   447  0FE8                     	;# 
   448  0FE9                     	;# 
   449  0FEA                     	;# 
   450  0FEB                     	;# 
   451  0FED                     	;# 
   452  0FEE                     	;# 
   453  0FEF                     	;# 
   454  0000                     	;# 
   455  0001                     	;# 
   456  0002                     	;# 
   457  0003                     	;# 
   458  0004                     	;# 
   459  0005                     	;# 
   460  0006                     	;# 
   461  0007                     	;# 
   462  0008                     	;# 
   463  0009                     	;# 
   464  000A                     	;# 
   465  000B                     	;# 
   466  000C                     	;# 
   467  000E                     	;# 
   468  0011                     	;# 
   469  0012                     	;# 
   470  0013                     	;# 
   471  0015                     	;# 
   472  0016                     	;# 
   473  0016                     	;# 
   474  0017                     	;# 
   475  0018                     	;# 
   476  0019                     	;# 
   477  001A                     	;# 
   478  001B                     	;# 
   479  001C                     	;# 
   480  008C                     	;# 
   481  008E                     	;# 
   482  0091                     	;# 
   483  0092                     	;# 
   484  0093                     	;# 
   485  0095                     	;# 
   486  0096                     	;# 
   487  0097                     	;# 
   488  0099                     	;# 
   489  009A                     	;# 
   490  009B                     	;# 
   491  009B                     	;# 
   492  009C                     	;# 
   493  009D                     	;# 
   494  009E                     	;# 
   495  009F                     	;# 
   496  010C                     	;# 
   497  010E                     	;# 
   498  0111                     	;# 
   499  0112                     	;# 
   500  0113                     	;# 
   501  0114                     	;# 
   502  0115                     	;# 
   503  0116                     	;# 
   504  0117                     	;# 
   505  0118                     	;# 
   506  0119                     	;# 
   507  011D                     	;# 
   508  018C                     	;# 
   509  018E                     	;# 
   510  0191                     	;# 
   511  0191                     	;# 
   512  0192                     	;# 
   513  0193                     	;# 
   514  0193                     	;# 
   515  0194                     	;# 
   516  0195                     	;# 
   517  0196                     	;# 
   518  0197                     	;# 
   519  020C                     	;# 
   520  0211                     	;# 
   521  0211                     	;# 
   522  0212                     	;# 
   523  0212                     	;# 
   524  0213                     	;# 
   525  0213                     	;# 
   526  0214                     	;# 
   527  0214                     	;# 
   528  0215                     	;# 
   529  0215                     	;# 
   530  0215                     	;# 
   531  0216                     	;# 
   532  0216                     	;# 
   533  0217                     	;# 
   534  0217                     	;# 
   535  0391                     	;# 
   536  0392                     	;# 
   537  0393                     	;# 
   538  0498                     	;# 
   539  0498                     	;# 
   540  0499                     	;# 
   541  049A                     	;# 
   542  049B                     	;# 
   543  049B                     	;# 
   544  049C                     	;# 
   545  049D                     	;# 
   546  049E                     	;# 
   547  049F                     	;# 
   548  0611                     	;# 
   549  0612                     	;# 
   550  0613                     	;# 
   551  0613                     	;# 
   552  0614                     	;# 
   553  0615                     	;# 
   554  0616                     	;# 
   555  0616                     	;# 
   556  0617                     	;# 
   557  0618                     	;# 
   558  0619                     	;# 
   559  0619                     	;# 
   560  061A                     	;# 
   561  061B                     	;# 
   562  061C                     	;# 
   563  061C                     	;# 
   564  0691                     	;# 
   565  0692                     	;# 
   566  0693                     	;# 
   567  0694                     	;# 
   568  0695                     	;# 
   569  0F0F                     	;# 
   570  0F10                     	;# 
   571  0F11                     	;# 
   572  0F12                     	;# 
   573  0F13                     	;# 
   574  0F14                     	;# 
   575  0F15                     	;# 
   576  0F16                     	;# 
   577  0F17                     	;# 
   578  0F18                     	;# 
   579  0F19                     	;# 
   580  0F1A                     	;# 
   581  0F1B                     	;# 
   582  0F1C                     	;# 
   583  0F1D                     	;# 
   584  0F1E                     	;# 
   585  0F1F                     	;# 
   586  0FE3                     	;# 
   587  0FE4                     	;# 
   588  0FE5                     	;# 
   589  0FE6                     	;# 
   590  0FE7                     	;# 
   591  0FE8                     	;# 
   592  0FE9                     	;# 
   593  0FEA                     	;# 
   594  0FEB                     	;# 
   595  0FED                     	;# 
   596  0FEE                     	;# 
   597  0FEF                     	;# 
   598                           
   599                           	psect	stringtext
   600  0787                     __pstringtext:	
   601  0787                     _lookup:	
   602  0787  3400               	retlw	0
   603  0788  3400               	retlw	0
   604  0789  340D               	retlw	13
   605  078A  3400               	retlw	0
   606  078B  3425               	retlw	37
   607  078C  3400               	retlw	0
   608  078D  3444               	retlw	68
   609  078E  3400               	retlw	0
   610  078F  3469               	retlw	105
   611  0790  3400               	retlw	0
   612  0791  3492               	retlw	146
   613  0792  3400               	retlw	0
   614  0793  34C0               	retlw	192
   615  0794  3400               	retlw	0
   616  0795  34F2               	retlw	242
   617  0796  3400               	retlw	0
   618  0797  3427               	retlw	39
   619  0798  3401               	retlw	1
   620  0799  3460               	retlw	96
   621  079A  3401               	retlw	1
   622  079B  349B               	retlw	155
   623  079C  3401               	retlw	1
   624  079D  34DA               	retlw	218
   625  079E  3401               	retlw	1
   626  079F  341B               	retlw	27
   627  07A0  3402               	retlw	2
   628  07A1  345E               	retlw	94
   629  07A2  3402               	retlw	2
   630  07A3  34A5               	retlw	165
   631  07A4  3402               	retlw	2
   632  07A5  34ED               	retlw	237
   633  07A6  3402               	retlw	2
   634  07A7  3438               	retlw	56
   635  07A8  3403               	retlw	3
   636  07A9  3485               	retlw	133
   637  07AA  3403               	retlw	3
   638  07AB  34D4               	retlw	212
   639  07AC  3403               	retlw	3
   640  07AD  3425               	retlw	37
   641  07AE  3404               	retlw	4
   642  07AF  3479               	retlw	121
   643  07B0  3404               	retlw	4
   644  07B1  34CD               	retlw	205
   645  07B2  3404               	retlw	4
   646  07B3  3424               	retlw	36
   647  07B4  3405               	retlw	5
   648  07B5  347D               	retlw	125
   649  07B6  3405               	retlw	5
   650  07B7  34D7               	retlw	215
   651  07B8  3405               	retlw	5
   652  07B9  3433               	retlw	51
   653  07BA  3406               	retlw	6
   654  07BB  3490               	retlw	144
   655  07BC  3406               	retlw	6
   656  07BD  34EF               	retlw	239
   657  07BE  3406               	retlw	6
   658  07BF  344F               	retlw	79
   659  07C0  3407               	retlw	7
   660  07C1  34B1               	retlw	177
   661  07C2  3407               	retlw	7
   662  07C3  3414               	retlw	20
   663  07C4  3408               	retlw	8
   664  07C5  346F               	retlw	111
   665  07C6  3408               	retlw	8
   666  07C7  34DF               	retlw	223
   667  07C8  3408               	retlw	8
   668  07C9  3446               	retlw	70
   669  07CA  3409               	retlw	9
   670  07CB  34AF               	retlw	175
   671  07CC  3409               	retlw	9
   672  07CD  3419               	retlw	25
   673  07CE  340A               	retlw	10
   674  07CF  3484               	retlw	132
   675  07D0  340A               	retlw	10
   676  07D1  34F0               	retlw	240
   677  07D2  340A               	retlw	10
   678  07D3  345D               	retlw	93
   679  07D4  340B               	retlw	11
   680  07D5  34CC               	retlw	204
   681  07D6  340B               	retlw	11
   682  07D7  343B               	retlw	59
   683  07D8  340C               	retlw	12
   684  07D9  34AC               	retlw	172
   685  07DA  340C               	retlw	12
   686  07DB  341D               	retlw	29
   687  07DC  340D               	retlw	13
   688  07DD  3490               	retlw	144
   689  07DE  340D               	retlw	13
   690  07DF  3403               	retlw	3
   691  07E0  340E               	retlw	14
   692  07E1  3478               	retlw	120
   693  07E2  340E               	retlw	14
   694  07E3  34ED               	retlw	237
   695  07E4  340E               	retlw	14
   696  07E5  3463               	retlw	99
   697  07E6  340F               	retlw	15
   698  07E7  34DA               	retlw	218
   699  07E8  340F               	retlw	15
   700  07E9  3452               	retlw	82
   701  07EA  3410               	retlw	16
   702  07EB  34CB               	retlw	203
   703  07EC  3410               	retlw	16
   704  07ED                     __end_of_lookup:	
   705  07ED                     Display_put@display_segment:	
   706  07ED  3400               	retlw	0
   707  07EE  346F               	retlw	111
   708  07EF  340A               	retlw	10
   709  07F0  3476               	retlw	118
   710  07F1  345E               	retlw	94
   711  07F2  341B               	retlw	27
   712  07F3  345D               	retlw	93
   713  07F4  347D               	retlw	125
   714  07F5  340E               	retlw	14
   715  07F6  347F               	retlw	127
   716  07F7  345F               	retlw	95
   717  07F8                     __end_ofDisplay_put@display_segment:	
   718  0073                     _RC3	set	115
   719  0095                     _OPTION_REGbits	set	149
   720  0099                     _OSCCON	set	153
   721  009A                     _OSCSTAT	set	154
   722  008C                     _TRISA	set	140
   723  008E                     _TRISC	set	142
   724  011D                     _APFCON	set	285
   725  010C                     _LATA	set	268
   726  010E                     _LATC	set	270
   727  0874                     _LATC4	set	2164
   728  0875                     _LATC5	set	2165
   729  018C                     _ANSELA	set	396
   730  018E                     _ANSELC	set	398
   731  020C                     _WPUA	set	524
   732                           
   733                           ; #config settings
   734  0000                     
   735                           	psect	cinit
   736  07F8                     start_initialization:	
   737  07F8                     __initialization:	
   738                           
   739                           ; Clear objects allocated to BANK0
   740  07F8  3040               	movlw	low __pbssBANK0
   741  07F9  0084               	movwf	4
   742  07FA  3000               	movlw	high __pbssBANK0
   743  07FB  0085               	movwf	5
   744  07FC  300D               	movlw	13
   745  07FD  259B               	fcall	clear_ram0
   746  07FE                     end_of_initialization:	
   747                           ;End of C runtime variable initialization code
   748                           
   749  07FE                     __end_of__initialization:	
   750  07FE  0020               	movlb	0
   751  07FF  2DB9               	ljmp	_main	;jump to C main() function
   752                           
   753                           	psect	bssBANK0
   754  0040                     __pbssBANK0:	
   755  0040                     Display_value@F3165:	
   756  0040                     	ds	6
   757  0046                     Display_value@F3167:	
   758  0046                     	ds	6
   759  004C                     _dot:	
   760  004C                     	ds	1
   761                           
   762                           	psect	clrtext
   763  059B                     clear_ram0:	
   764                           ;	Called with FSR0 containing the base address, and
   765                           ;	WREG with the size to clear
   766                           
   767  059B  0064               	clrwdt	;clear the watchdog before getting into this loop
   768  059C                     clrloop0:	
   769  059C  0180               	clrf	0	;clear RAM location pointed to by FSR
   770  059D  3101               	addfsr 0,1
   771  059E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   772  059F  2D9C               	goto	clrloop0	;have we reached the end yet?
   773  05A0  3400               	retlw	0	;all done for this memory range, return
   774                           
   775                           	psect	cstackCOMMON
   776  0070                     __pcstackCOMMON:	
   777  0070                     ?_GetStringReverse:	
   778  0070                     ?_Display_put:	
   779                           ; 0 bytes @ 0x0
   780                           
   781  0070                     ?_OSCILLATOR_Initialize:	
   782                           ; 0 bytes @ 0x0
   783                           
   784  0070                     ??_OSCILLATOR_Initialize:	
   785                           ; 0 bytes @ 0x0
   786                           
   787  0070                     ?_PIN_MANAGER_Initialize:	
   788                           ; 0 bytes @ 0x0
   789                           
   790  0070                     ??_PIN_MANAGER_Initialize:	
   791                           ; 0 bytes @ 0x0
   792                           
   793  0070                     ?_SYSTEM_Initialize:	
   794                           ; 0 bytes @ 0x0
   795                           
   796  0070                     ??_SYSTEM_Initialize:	
   797                           ; 0 bytes @ 0x0
   798                           
   799  0070                     ?_main:	
   800                           ; 0 bytes @ 0x0
   801                           
   802  0070                     ?___lwdiv:	
   803                           ; 0 bytes @ 0x0
   804                           
   805  0070                     ?___lwmod:	
   806                           ; 2 bytes @ 0x0
   807                           
   808  0070                     GetStringReverse@buff:	
   809                           ; 2 bytes @ 0x0
   810                           
   811  0070                     Display_put@dig:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ___lwdiv@divisor:	
   815                           ; 2 bytes @ 0x0
   816                           
   817  0070                     ___lwmod@divisor:	
   818                           ; 2 bytes @ 0x0
   819                           
   820                           
   821                           ; 2 bytes @ 0x0
   822  0070                     	ds	1
   823  0071                     ??_GetStringReverse:	
   824                           
   825                           ; 0 bytes @ 0x1
   826  0071                     	ds	1
   827  0072                     ??_Display_put:	
   828  0072                     GetStringReverse@str:	
   829                           ; 0 bytes @ 0x2
   830                           
   831  0072                     ___lwdiv@dividend:	
   832                           ; 1 bytes @ 0x2
   833                           
   834  0072                     ___lwmod@dividend:	
   835                           ; 2 bytes @ 0x2
   836                           
   837                           
   838                           ; 2 bytes @ 0x2
   839  0072                     	ds	1
   840  0073                     GetStringReverse@i:	
   841                           
   842                           ; 2 bytes @ 0x3
   843  0073                     	ds	1
   844  0074                     ??___lwdiv:	
   845  0074                     ??___lwmod:	
   846                           ; 0 bytes @ 0x4
   847                           
   848  0074                     Display_put@digit:	
   849                           ; 0 bytes @ 0x4
   850                           
   851                           
   852                           ; 1 bytes @ 0x4
   853  0074                     	ds	1
   854  0075                     Display_put@i:	
   855  0075                     GetStringReverse@rptr:	
   856                           ; 1 bytes @ 0x5
   857                           
   858  0075                     ___lwmod@counter:	
   859                           ; 1 bytes @ 0x5
   860                           
   861  0075                     ___lwdiv@quotient:	
   862                           ; 1 bytes @ 0x5
   863                           
   864                           
   865                           ; 2 bytes @ 0x5
   866  0075                     	ds	1
   867  0076                     GetStringReverse@sptr:	
   868                           
   869                           ; 1 bytes @ 0x6
   870  0076                     	ds	1
   871  0077                     ___lwdiv@counter:	
   872                           
   873                           ; 1 bytes @ 0x7
   874  0077                     	ds	1
   875  0078                     ?_utoa:	
   876  0078                     utoa@val:	
   877                           ; 1 bytes @ 0x8
   878                           
   879                           
   880                           ; 2 bytes @ 0x8
   881  0078                     	ds	2
   882  007A                     utoa@base:	
   883                           
   884                           ; 2 bytes @ 0xA
   885  007A                     	ds	2
   886  007C                     ??_utoa:	
   887                           
   888                           ; 0 bytes @ 0xC
   889  007C                     	ds	1
   890  007D                     ??_itoa:	
   891                           
   892                           ; 0 bytes @ 0xD
   893  007D                     	ds	1
   894                           
   895                           	psect	cstackBANK0
   896  0020                     __pcstackBANK0:	
   897  0020                     utoa@v:	
   898                           
   899                           ; 2 bytes @ 0x0
   900  0020                     	ds	2
   901  0022                     utoa@c:	
   902                           
   903                           ; 1 bytes @ 0x2
   904  0022                     	ds	1
   905  0023                     utoa@buf:	
   906                           
   907                           ; 1 bytes @ 0x3
   908  0023                     	ds	1
   909  0024                     ?_itoa:	
   910  0024                     itoa@val:	
   911                           ; 1 bytes @ 0x4
   912                           
   913                           
   914                           ; 2 bytes @ 0x4
   915  0024                     	ds	2
   916  0026                     itoa@base:	
   917                           
   918                           ; 2 bytes @ 0x6
   919  0026                     	ds	2
   920  0028                     itoa@cp:	
   921                           
   922                           ; 1 bytes @ 0x8
   923  0028                     	ds	1
   924  0029                     itoa@buf:	
   925                           
   926                           ; 1 bytes @ 0x9
   927  0029                     	ds	1
   928  002A                     ?_Display_value:	
   929  002A                     Display_value@value:	
   930                           ; 0 bytes @ 0xA
   931                           
   932                           
   933                           ; 2 bytes @ 0xA
   934  002A                     	ds	2
   935  002C                     ??_Display_value:	
   936                           
   937                           ; 0 bytes @ 0xC
   938  002C                     	ds	2
   939  002E                     Display_value@myBuffer:	
   940                           
   941                           ; 6 bytes @ 0xE
   942  002E                     	ds	6
   943  0034                     Display_value@numChar:	
   944                           
   945                           ; 6 bytes @ 0x14
   946  0034                     	ds	6
   947  003A                     Display_value@number:	
   948                           
   949                           ; 2 bytes @ 0x1A
   950  003A                     	ds	2
   951  003C                     Display_value@i:	
   952                           
   953                           ; 1 bytes @ 0x1C
   954  003C                     	ds	1
   955  003D                     ??_main:	
   956                           
   957                           ; 0 bytes @ 0x1D
   958  003D                     	ds	2
   959  003F                     main@m:	
   960                           
   961                           ; 1 bytes @ 0x1F
   962  003F                     	ds	1
   963                           
   964                           	psect	maintext
   965  05B9                     __pmaintext:	
   966 ;;
   967 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   968 ;;
   969 ;; *************** function _main *****************
   970 ;; Defined at:
   971 ;;		line 52 in file "main.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;  m               1   31[BANK0 ] unsigned char 
   976 ;; Return value:  Size  Location     Type
   977 ;;		None               void
   978 ;; Registers used:
   979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : B1F/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMMON   BANK0   BANK1
   985 ;;      Params:         0       0       0
   986 ;;      Locals:         0       1       0
   987 ;;      Temps:          0       2       0
   988 ;;      Totals:         0       3       0
   989 ;;Total ram usage:        3 bytes
   990 ;; Hardware stack levels required when called:    4
   991 ;; This function calls:
   992 ;;		_Display_value
   993 ;;		_SYSTEM_Initialize
   994 ;; This function is called by:
   995 ;;		Startup code after reset
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           
  1000                           ;psect for function _main
  1001  05B9                     _main:	
  1002                           
  1003                           ;main.c: 54: SYSTEM_Initialize();
  1004                           
  1005                           ;incstack = 0
  1006                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1007  05B9  2593               	fcall	_SYSTEM_Initialize
  1008                           
  1009                           ;main.c: 71: uint8_t m=23;
  1010  05BA  3017               	movlw	23
  1011  05BB  0020               	movlb	0	; select bank0
  1012  05BC  00BD               	movwf	??_main
  1013  05BD  083D               	movf	??_main,w
  1014  05BE  00BF               	movwf	main@m
  1015  05BF                     l910:	
  1016                           ;main.c: 72: while (1)
  1017                           
  1018                           
  1019                           ;main.c: 73: {
  1020                           ;main.c: 74: Display_value(lookup[m]);
  1021  05BF  0020               	movlb	0	; select bank0
  1022  05C0  083F               	movf	main@m,w
  1023  05C1  00BD               	movwf	??_main
  1024  05C2  01BE               	clrf	??_main+1
  1025  05C3  35BD               	lslf	??_main,f
  1026  05C4  0DBE               	rlf	??_main+1,f
  1027  05C5  3087               	movlw	low (_lookup| (0+32768))
  1028  05C6  073D               	addwf	??_main,w
  1029  05C7  0084               	movwf	4
  1030  05C8  3087               	movlw	high (_lookup| (0+32768))
  1031  05C9  3D3E               	addwfc	??_main+1,w
  1032  05CA  0085               	movwf	5
  1033  05CB  3F00               	moviw [0]fsr0
  1034  05CC  00AA               	movwf	Display_value@value
  1035  05CD  3F01               	moviw [1]fsr0
  1036  05CE  00AB               	movwf	Display_value@value+1
  1037  05CF  2723               	fcall	_Display_value
  1038  05D0  2DBF               	goto	l910
  1039  05D1                     __end_of_main:	
  1040                           
  1041                           	psect	text1
  1042  0593                     __ptext1:	
  1043 ;; *************** function _SYSTEM_Initialize *****************
  1044 ;; Defined at:
  1045 ;;		line 67 in file "mcc_generated_files/mcc.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;		None               void
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0, pclath, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1
  1059 ;;      Params:         0       0       0
  1060 ;;      Locals:         0       0       0
  1061 ;;      Temps:          0       0       0
  1062 ;;      Totals:         0       0       0
  1063 ;;Total ram usage:        0 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    1
  1066 ;; This function calls:
  1067 ;;		_OSCILLATOR_Initialize
  1068 ;;		_PIN_MANAGER_Initialize
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           
  1075                           ;psect for function _SYSTEM_Initialize
  1076  0593                     _SYSTEM_Initialize:	
  1077                           
  1078                           ;mcc.c: 68: OSCILLATOR_Initialize();
  1079                           
  1080                           ;incstack = 0
  1081                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1082  0593  2596               	fcall	_OSCILLATOR_Initialize
  1083                           
  1084                           ;mcc.c: 69: PIN_MANAGER_Initialize();
  1085  0594  25A1               	fcall	_PIN_MANAGER_Initialize
  1086  0595  0008               	return
  1087  0596                     __end_of_SYSTEM_Initialize:	
  1088                           
  1089                           	psect	text2
  1090  05A1                     __ptext2:	
  1091 ;; *************** function _PIN_MANAGER_Initialize *****************
  1092 ;; Defined at:
  1093 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;		None               void
  1100 ;; Registers used:
  1101 ;;		wreg, status,2
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1
  1107 ;;      Params:         0       0       0
  1108 ;;      Locals:         0       0       0
  1109 ;;      Temps:          0       0       0
  1110 ;;      Totals:         0       0       0
  1111 ;;Total ram usage:        0 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; This function calls:
  1114 ;;		Nothing
  1115 ;; This function is called by:
  1116 ;;		_SYSTEM_Initialize
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           
  1121                           ;psect for function _PIN_MANAGER_Initialize
  1122  05A1                     _PIN_MANAGER_Initialize:	
  1123                           
  1124                           ;pin_manager.c: 51: LATA = 0x00;
  1125                           
  1126                           ;incstack = 0
  1127                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1128  05A1  0022               	movlb	2	; select bank2
  1129  05A2  018C               	clrf	12	;volatile
  1130                           
  1131                           ;pin_manager.c: 52: TRISA = 0x3F;
  1132  05A3  303F               	movlw	63
  1133  05A4  0021               	movlb	1	; select bank1
  1134  05A5  008C               	movwf	12	;volatile
  1135                           
  1136                           ;pin_manager.c: 53: ANSELA = 0x17;
  1137  05A6  3017               	movlw	23
  1138  05A7  0023               	movlb	3	; select bank3
  1139  05A8  008C               	movwf	12	;volatile
  1140                           
  1141                           ;pin_manager.c: 54: WPUA = 0x00;
  1142  05A9  0024               	movlb	4	; select bank4
  1143  05AA  018C               	clrf	12	;volatile
  1144                           
  1145                           ;pin_manager.c: 56: LATC = 0x10;
  1146  05AB  3010               	movlw	16
  1147  05AC  0022               	movlb	2	; select bank2
  1148  05AD  008E               	movwf	14	;volatile
  1149                           
  1150                           ;pin_manager.c: 57: TRISC = 0x07;
  1151  05AE  3007               	movlw	7
  1152  05AF  0021               	movlb	1	; select bank1
  1153  05B0  008E               	movwf	14	;volatile
  1154                           
  1155                           ;pin_manager.c: 58: ANSELC = 0x07;
  1156  05B1  3007               	movlw	7
  1157  05B2  0023               	movlb	3	; select bank3
  1158  05B3  008E               	movwf	14	;volatile
  1159                           
  1160                           ;pin_manager.c: 60: OPTION_REGbits.nWPUEN = 0x01;
  1161  05B4  0021               	movlb	1	; select bank1
  1162  05B5  1795               	bsf	21,7	;volatile
  1163                           
  1164                           ;pin_manager.c: 62: APFCON = 0x00;
  1165  05B6  0022               	movlb	2	; select bank2
  1166  05B7  019D               	clrf	29	;volatile
  1167  05B8  0008               	return
  1168  05B9                     __end_of_PIN_MANAGER_Initialize:	
  1169                           
  1170                           	psect	text3
  1171  0596                     __ptext3:	
  1172 ;; *************** function _OSCILLATOR_Initialize *****************
  1173 ;; Defined at:
  1174 ;;		line 72 in file "mcc_generated_files/mcc.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;		None
  1179 ;; Return value:  Size  Location     Type
  1180 ;;		None               void
  1181 ;; Registers used:
  1182 ;;		wreg, status,2
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMMON   BANK0   BANK1
  1188 ;;      Params:         0       0       0
  1189 ;;      Locals:         0       0       0
  1190 ;;      Temps:          0       0       0
  1191 ;;      Totals:         0       0       0
  1192 ;;Total ram usage:        0 bytes
  1193 ;; Hardware stack levels used:    1
  1194 ;; This function calls:
  1195 ;;		Nothing
  1196 ;; This function is called by:
  1197 ;;		_SYSTEM_Initialize
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           
  1202                           ;psect for function _OSCILLATOR_Initialize
  1203  0596                     _OSCILLATOR_Initialize:	
  1204                           
  1205                           ;mcc.c: 74: OSCCON = 0x7A;
  1206                           
  1207                           ;incstack = 0
  1208                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1209  0596  307A               	movlw	122
  1210  0597  0021               	movlb	1	; select bank1
  1211  0598  0099               	movwf	25	;volatile
  1212                           
  1213                           ;mcc.c: 76: OSCSTAT = 0x00;
  1214  0599  019A               	clrf	26	;volatile
  1215  059A  0008               	return
  1216  059B                     __end_of_OSCILLATOR_Initialize:	
  1217                           
  1218                           	psect	text4
  1219  0723                     __ptext4:	
  1220 ;; *************** function _Display_value *****************
  1221 ;; Defined at:
  1222 ;;		line 11 in file "drv_74hc595/drv_74hc595.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  value           2   10[BANK0 ] unsigned int 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;  numChar         6   20[BANK0 ] unsigned char [6]
  1227 ;;  myBuffer        6   14[BANK0 ] unsigned char [6]
  1228 ;;  number          2   26[BANK0 ] unsigned int 
  1229 ;;  i               1   28[BANK0 ] unsigned char 
  1230 ;; Return value:  Size  Location     Type
  1231 ;;		None               void
  1232 ;; Registers used:
  1233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMMON   BANK0   BANK1
  1239 ;;      Params:         0       2       0
  1240 ;;      Locals:         0      15       0
  1241 ;;      Temps:          0       2       0
  1242 ;;      Totals:         0      19       0
  1243 ;;Total ram usage:       19 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; Hardware stack levels required when called:    3
  1246 ;; This function calls:
  1247 ;;		_Display_put
  1248 ;;		_GetStringReverse
  1249 ;;		_itoa
  1250 ;; This function is called by:
  1251 ;;		_main
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           
  1256                           ;psect for function _Display_value
  1257  0723                     _Display_value:	
  1258                           
  1259                           ;drv_74hc595.c: 13: uint8_t i=0;
  1260                           
  1261                           ;incstack = 0
  1262                           ; Regs used in _Display_value: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1263  0723  0020               	movlb	0	; select bank0
  1264  0724  01BC               	clrf	Display_value@i
  1265                           
  1266                           ;drv_74hc595.c: 14: uint16_t number = value;
  1267  0725  082B               	movf	Display_value@value+1,w
  1268  0726  00BB               	movwf	Display_value@number+1
  1269  0727  082A               	movf	Display_value@value,w
  1270  0728  00BA               	movwf	Display_value@number
  1271                           
  1272                           ;drv_74hc595.c: 15: char myBuffer[6]={'\0'};
  1273  0729  3040               	movlw	low Display_value@F3165
  1274  072A  0086               	movwf	6
  1275  072B  3000               	movlw	high Display_value@F3165
  1276  072C  0087               	movwf	7
  1277  072D  302E               	movlw	low Display_value@myBuffer
  1278  072E  0084               	movwf	4
  1279  072F  3000               	movlw	high Display_value@myBuffer
  1280  0730  0085               	movwf	5
  1281  0731  3006               	movlw	6
  1282  0732  00AC               	movwf	??_Display_value
  1283  0733                     u560:	
  1284  0733  0016               	moviw fsr1++
  1285  0734  001A               	movwi fsr0++
  1286  0735  0BAC               	decfsz	??_Display_value,f
  1287  0736  2F33               	goto	u560
  1288                           
  1289                           ;drv_74hc595.c: 16: char numChar[6]={'\0'};
  1290  0737  3046               	movlw	low Display_value@F3167
  1291  0738  0086               	movwf	6
  1292  0739  3000               	movlw	high Display_value@F3167
  1293  073A  0087               	movwf	7
  1294  073B  3034               	movlw	low Display_value@numChar
  1295  073C  0084               	movwf	4
  1296  073D  3000               	movlw	high Display_value@numChar
  1297  073E  0085               	movwf	5
  1298  073F  3006               	movlw	6
  1299  0740  00AC               	movwf	??_Display_value
  1300  0741                     u570:	
  1301  0741  0016               	moviw fsr1++
  1302  0742  001A               	movwi fsr0++
  1303  0743  0BAC               	decfsz	??_Display_value,f
  1304  0744  2F41               	goto	u570
  1305                           
  1306                           ;drv_74hc595.c: 17: itoa(myBuffer, number, 10);
  1307  0745  083B               	movf	Display_value@number+1,w
  1308  0746  00A5               	movwf	itoa@val+1
  1309  0747  083A               	movf	Display_value@number,w
  1310  0748  00A4               	movwf	itoa@val
  1311  0749  300A               	movlw	10
  1312  074A  00A6               	movwf	itoa@base
  1313  074B  3000               	movlw	0
  1314  074C  00A7               	movwf	itoa@base+1
  1315  074D  302E               	movlw	(low (Display_value@myBuffer| 0))& (0+255)
  1316  074E  25D1               	fcall	_itoa
  1317                           
  1318                           ;drv_74hc595.c: 18: GetStringReverse(myBuffer, numChar);
  1319  074F  3034               	movlw	(low (Display_value@numChar| 0))& (0+255)
  1320  0750  0020               	movlb	0	; select bank0
  1321  0751  00AC               	movwf	??_Display_value
  1322  0752  082C               	movf	??_Display_value,w
  1323  0753  00F0               	movwf	GetStringReverse@buff
  1324  0754  302E               	movlw	(low (Display_value@myBuffer| 0))& (0+255)
  1325  0755  2689               	fcall	_GetStringReverse
  1326                           
  1327                           ;drv_74hc595.c: 19: Display_put('0');
  1328  0756  3030               	movlw	48
  1329  0757  00F0               	movwf	Display_put@dig
  1330  0758  3000               	movlw	0
  1331  0759  00F1               	movwf	Display_put@dig+1
  1332  075A  2654               	fcall	_Display_put
  1333                           
  1334                           ;drv_74hc595.c: 20: dot=1;
  1335  075B  0020               	movlb	0	; select bank0
  1336  075C  01CC               	clrf	_dot
  1337  075D  0ACC               	incf	_dot,f
  1338                           
  1339                           ;drv_74hc595.c: 21: for(i=0; i<5; i++)
  1340  075E  01BC               	clrf	Display_value@i
  1341  075F  3005               	movlw	5
  1342  0760  023C               	subwf	Display_value@i,w
  1343  0761  1803               	btfsc	3,0
  1344  0762  2F83               	goto	l27
  1345  0763                     l894:	
  1346                           
  1347                           ;drv_74hc595.c: 22: {
  1348                           ;drv_74hc595.c: 23: if(numChar[i]!= '\0')
  1349  0763  083C               	movf	Display_value@i,w
  1350  0764  3E34               	addlw	(low (Display_value@numChar| 0))& (0+255)
  1351  0765  0086               	movwf	6
  1352  0766  0187               	clrf	7
  1353  0767  0801               	movf	1,w
  1354  0768  1903               	btfsc	3,2
  1355  0769  2F75               	goto	l898
  1356                           
  1357                           ;drv_74hc595.c: 24: {
  1358                           ;drv_74hc595.c: 25: Display_put(numChar[i]);
  1359  076A  083C               	movf	Display_value@i,w
  1360  076B  3E34               	addlw	(low (Display_value@numChar| 0))& (0+255)
  1361  076C  0086               	movwf	6
  1362  076D  0187               	clrf	7
  1363  076E  0801               	movf	1,w
  1364  076F  00AC               	movwf	??_Display_value
  1365  0770  01AD               	clrf	??_Display_value+1
  1366  0771  082C               	movf	??_Display_value,w
  1367  0772  00F0               	movwf	Display_put@dig
  1368  0773  082D               	movf	??_Display_value+1,w
  1369  0774  2F78               	goto	L1
  1370  0775                     l898:	
  1371                           ;drv_74hc595.c: 26: }
  1372                           
  1373                           
  1374                           ;drv_74hc595.c: 27: else
  1375                           ;drv_74hc595.c: 28: {
  1376                           ;drv_74hc595.c: 29: Display_put((0));
  1377  0775  3000               	movlw	0
  1378  0776  00F0               	movwf	Display_put@dig
  1379  0777  3000               	movlw	0
  1380  0778                     L1:	
  1381  0778  00F1               	movwf	Display_put@dig+1
  1382  0779  2654               	fcall	_Display_put
  1383  077A  3001               	movlw	1
  1384  077B  0020               	movlb	0	; select bank0
  1385  077C  00AC               	movwf	??_Display_value
  1386  077D  082C               	movf	??_Display_value,w
  1387  077E  07BC               	addwf	Display_value@i,f
  1388  077F  3005               	movlw	5
  1389  0780  023C               	subwf	Display_value@i,w
  1390  0781  1C03               	skipc
  1391  0782  2F63               	goto	l894
  1392  0783                     l27:	
  1393                           ;drv_74hc595.c: 30: }
  1394                           ;drv_74hc595.c: 31: }
  1395                           ;drv_74hc595.c: 32: do { LATC4 = 1; } while(0);
  1396                           
  1397  0783  0022               	movlb	2	; select bank2
  1398  0784  160E               	bsf	14,4	;volatile
  1399                           
  1400                           ;drv_74hc595.c: 33: do { LATC4 = 0; } while(0);
  1401  0785  120E               	bcf	14,4	;volatile
  1402  0786  0008               	return
  1403  0787                     __end_of_Display_value:	
  1404                           
  1405                           	psect	text5
  1406  05D1                     __ptext5:	
  1407 ;; *************** function _itoa *****************
  1408 ;; Defined at:
  1409 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  buf             1    wreg     PTR unsigned char 
  1412 ;;		 -> Display_value@myBuffer(6), 
  1413 ;;  val             2    4[BANK0 ] int 
  1414 ;;  base            2    6[BANK0 ] int 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  1417 ;;		 -> Display_value@myBuffer(6), 
  1418 ;;  cp              1    8[BANK0 ] PTR unsigned char 
  1419 ;;		 -> Display_value@myBuffer(6), 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      PTR unsigned char 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1
  1429 ;;      Params:         0       4       0
  1430 ;;      Locals:         0       2       0
  1431 ;;      Temps:          1       0       0
  1432 ;;      Totals:         1       6       0
  1433 ;;Total ram usage:        7 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    2
  1436 ;; This function calls:
  1437 ;;		_utoa
  1438 ;; This function is called by:
  1439 ;;		_Display_value
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           
  1444                           ;psect for function _itoa
  1445  05D1                     _itoa:	
  1446                           
  1447                           ;incstack = 0
  1448                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1449                           ;itoa@buf stored from wreg
  1450  05D1  0020               	movlb	0	; select bank0
  1451  05D2  00A9               	movwf	itoa@buf
  1452  05D3  0829               	movf	itoa@buf,w
  1453  05D4  00FD               	movwf	??_itoa
  1454  05D5  087D               	movf	??_itoa,w
  1455  05D6  00A8               	movwf	itoa@cp
  1456  05D7  1FA5               	btfss	itoa@val+1,7
  1457  05D8  2DE9               	goto	l794
  1458  05D9  302D               	movlw	45
  1459  05DA  00FD               	movwf	??_itoa
  1460  05DB  0829               	movf	itoa@buf,w
  1461  05DC  0086               	movwf	6
  1462  05DD  0187               	clrf	7
  1463  05DE  087D               	movf	??_itoa,w
  1464  05DF  0081               	movwf	1
  1465  05E0  3001               	movlw	1
  1466  05E1  00FD               	movwf	??_itoa
  1467  05E2  087D               	movf	??_itoa,w
  1468  05E3  07A9               	addwf	itoa@buf,f
  1469  05E4  09A4               	comf	itoa@val,f
  1470  05E5  09A5               	comf	itoa@val+1,f
  1471  05E6  0AA4               	incf	itoa@val,f
  1472  05E7  1903               	skipnz
  1473  05E8  0AA5               	incf	itoa@val+1,f
  1474  05E9                     l794:	
  1475  05E9  0825               	movf	itoa@val+1,w
  1476  05EA  00F9               	movwf	utoa@val+1
  1477  05EB  0824               	movf	itoa@val,w
  1478  05EC  00F8               	movwf	utoa@val
  1479  05ED  0827               	movf	itoa@base+1,w
  1480  05EE  00FB               	movwf	utoa@base+1
  1481  05EF  0826               	movf	itoa@base,w
  1482  05F0  00FA               	movwf	utoa@base
  1483  05F1  0829               	movf	itoa@buf,w
  1484  05F2  26C7               	fcall	_utoa
  1485  05F3  0008               	return
  1486  05F4                     __end_of_itoa:	
  1487                           ;	Return value of _itoa is never used
  1488                           
  1489                           
  1490                           	psect	text6
  1491  06C7                     __ptext6:	
  1492 ;; *************** function _utoa *****************
  1493 ;; Defined at:
  1494 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  buf             1    wreg     PTR unsigned char 
  1497 ;;		 -> Display_value@myBuffer(6), 
  1498 ;;  val             2    8[COMMON] unsigned int 
  1499 ;;  base            2   10[COMMON] int 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1502 ;;		 -> Display_value@myBuffer(6), 
  1503 ;;  v               2    0[BANK0 ] unsigned int 
  1504 ;;  c               1    2[BANK0 ] unsigned char 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      PTR unsigned char 
  1507 ;; Registers used:
  1508 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMMON   BANK0   BANK1
  1514 ;;      Params:         4       0       0
  1515 ;;      Locals:         0       4       0
  1516 ;;      Temps:          1       0       0
  1517 ;;      Totals:         5       4       0
  1518 ;;Total ram usage:        9 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; Hardware stack levels required when called:    1
  1521 ;; This function calls:
  1522 ;;		___lwdiv
  1523 ;;		___lwmod
  1524 ;; This function is called by:
  1525 ;;		_itoa
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           
  1530                           ;psect for function _utoa
  1531  06C7                     _utoa:	
  1532                           
  1533                           ;incstack = 0
  1534                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1535                           ;utoa@buf stored from wreg
  1536  06C7  0020               	movlb	0	; select bank0
  1537  06C8  00A3               	movwf	utoa@buf
  1538  06C9  0879               	movf	utoa@val+1,w
  1539  06CA  00A1               	movwf	utoa@v+1
  1540  06CB  0878               	movf	utoa@val,w
  1541  06CC  00A0               	movwf	utoa@v
  1542  06CD                     l756:	
  1543  06CD  087B               	movf	utoa@base+1,w
  1544  06CE  00F1               	movwf	___lwdiv@divisor+1
  1545  06CF  087A               	movf	utoa@base,w
  1546  06D0  00F0               	movwf	___lwdiv@divisor
  1547  06D1  0821               	movf	utoa@v+1,w
  1548  06D2  00F3               	movwf	___lwdiv@dividend+1
  1549  06D3  0820               	movf	utoa@v,w
  1550  06D4  00F2               	movwf	___lwdiv@dividend
  1551  06D5  2620               	fcall	___lwdiv
  1552  06D6  0871               	movf	?___lwdiv+1,w
  1553  06D7  0020               	movlb	0	; select bank0
  1554  06D8  00A1               	movwf	utoa@v+1
  1555  06D9  0870               	movf	?___lwdiv,w
  1556  06DA  00A0               	movwf	utoa@v
  1557  06DB  3001               	movlw	1
  1558  06DC  00FC               	movwf	??_utoa
  1559  06DD  087C               	movf	??_utoa,w
  1560  06DE  07A3               	addwf	utoa@buf,f
  1561  06DF  0820               	movf	utoa@v,w
  1562  06E0  0421               	iorwf	utoa@v+1,w
  1563  06E1  1D03               	btfss	3,2
  1564  06E2  2ECD               	goto	l756
  1565  06E3  0823               	movf	utoa@buf,w
  1566  06E4  0086               	movwf	6
  1567  06E5  0187               	clrf	7
  1568  06E6  0181               	clrf	1
  1569  06E7  3001               	movlw	1
  1570  06E8  02A3               	subwf	utoa@buf,f
  1571  06E9                     l766:	
  1572  06E9  087B               	movf	utoa@base+1,w
  1573  06EA  00F1               	movwf	___lwmod@divisor+1
  1574  06EB  087A               	movf	utoa@base,w
  1575  06EC  00F0               	movwf	___lwmod@divisor
  1576  06ED  0879               	movf	utoa@val+1,w
  1577  06EE  00F3               	movwf	___lwmod@dividend+1
  1578  06EF  0878               	movf	utoa@val,w
  1579  06F0  00F2               	movwf	___lwmod@dividend
  1580  06F1  25F4               	fcall	___lwmod
  1581  06F2  0870               	movf	?___lwmod,w
  1582  06F3  00FC               	movwf	??_utoa
  1583  06F4  087C               	movf	??_utoa,w
  1584  06F5  0020               	movlb	0	; select bank0
  1585  06F6  00A2               	movwf	utoa@c
  1586  06F7  087B               	movf	utoa@base+1,w
  1587  06F8  00F1               	movwf	___lwdiv@divisor+1
  1588  06F9  087A               	movf	utoa@base,w
  1589  06FA  00F0               	movwf	___lwdiv@divisor
  1590  06FB  0879               	movf	utoa@val+1,w
  1591  06FC  00F3               	movwf	___lwdiv@dividend+1
  1592  06FD  0878               	movf	utoa@val,w
  1593  06FE  00F2               	movwf	___lwdiv@dividend
  1594  06FF  2620               	fcall	___lwdiv
  1595  0700  0871               	movf	?___lwdiv+1,w
  1596  0701  00F9               	movwf	utoa@val+1
  1597  0702  0870               	movf	?___lwdiv,w
  1598  0703  00F8               	movwf	utoa@val
  1599  0704  300A               	movlw	10
  1600  0705  0020               	movlb	0	; select bank0
  1601  0706  0222               	subwf	utoa@c,w
  1602  0707  1C03               	skipc
  1603  0708  2F0D               	goto	l377
  1604  0709  3007               	movlw	7
  1605  070A  00FC               	movwf	??_utoa
  1606  070B  087C               	movf	??_utoa,w
  1607  070C  07A2               	addwf	utoa@c,f
  1608  070D                     l377:	
  1609  070D  3030               	movlw	48
  1610  070E  00FC               	movwf	??_utoa
  1611  070F  087C               	movf	??_utoa,w
  1612  0710  07A2               	addwf	utoa@c,f
  1613  0711  0822               	movf	utoa@c,w
  1614  0712  00FC               	movwf	??_utoa
  1615  0713  0823               	movf	utoa@buf,w
  1616  0714  0086               	movwf	6
  1617  0715  0187               	clrf	7
  1618  0716  087C               	movf	??_utoa,w
  1619  0717  0081               	movwf	1
  1620  0718  3001               	movlw	1
  1621  0719  02A3               	subwf	utoa@buf,f
  1622  071A  0878               	movf	utoa@val,w
  1623  071B  0479               	iorwf	utoa@val+1,w
  1624  071C  1D03               	btfss	3,2
  1625  071D  2EE9               	goto	l766
  1626                           
  1627                           ;	Return value of _utoa is never used
  1628  071E  3001               	movlw	1
  1629  071F  00FC               	movwf	??_utoa
  1630  0720  087C               	movf	??_utoa,w
  1631  0721  07A3               	addwf	utoa@buf,f
  1632  0722  0008               	return
  1633  0723                     __end_of_utoa:	
  1634                           
  1635                           	psect	text7
  1636  05F4                     __ptext7:	
  1637 ;; *************** function ___lwmod *****************
  1638 ;; Defined at:
  1639 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  divisor         2    0[COMMON] unsigned int 
  1642 ;;  dividend        2    2[COMMON] unsigned int 
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  counter         1    5[COMMON] unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  2    0[COMMON] unsigned int 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2, status,0
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMMON   BANK0   BANK1
  1654 ;;      Params:         4       0       0
  1655 ;;      Locals:         1       0       0
  1656 ;;      Temps:          1       0       0
  1657 ;;      Totals:         6       0       0
  1658 ;;Total ram usage:        6 bytes
  1659 ;; Hardware stack levels used:    1
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_utoa
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           
  1668                           ;psect for function ___lwmod
  1669  05F4                     ___lwmod:	
  1670                           
  1671                           ;incstack = 0
  1672                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1673  05F4  0870               	movf	___lwmod@divisor,w
  1674  05F5  0471               	iorwf	___lwmod@divisor+1,w
  1675  05F6  1903               	btfsc	3,2
  1676  05F7  2E1B               	goto	l750
  1677  05F8  01F5               	clrf	___lwmod@counter
  1678  05F9  0AF5               	incf	___lwmod@counter,f
  1679  05FA                     l740:	
  1680  05FA  1BF1               	btfsc	___lwmod@divisor+1,7
  1681  05FB  2E06               	goto	l742
  1682  05FC  3001               	movlw	1
  1683  05FD                     u395:	
  1684  05FD  35F0               	lslf	___lwmod@divisor,f
  1685  05FE  0DF1               	rlf	___lwmod@divisor+1,f
  1686  05FF  0B89               	decfsz	9,f
  1687  0600  2DFD               	goto	u395
  1688  0601  3001               	movlw	1
  1689  0602  00F4               	movwf	??___lwmod
  1690  0603  0874               	movf	??___lwmod,w
  1691  0604  07F5               	addwf	___lwmod@counter,f
  1692  0605  2DFA               	goto	l740
  1693  0606                     l742:	
  1694  0606  0871               	movf	___lwmod@divisor+1,w
  1695  0607  0273               	subwf	___lwmod@dividend+1,w
  1696  0608  1D03               	skipz
  1697  0609  2E0C               	goto	u415
  1698  060A  0870               	movf	___lwmod@divisor,w
  1699  060B  0272               	subwf	___lwmod@dividend,w
  1700  060C                     u415:	
  1701  060C  1C03               	skipc
  1702  060D  2E12               	goto	l746
  1703  060E  0870               	movf	___lwmod@divisor,w
  1704  060F  02F2               	subwf	___lwmod@dividend,f
  1705  0610  0871               	movf	___lwmod@divisor+1,w
  1706  0611  3BF3               	subwfb	___lwmod@dividend+1,f
  1707  0612                     l746:	
  1708  0612  3001               	movlw	1
  1709  0613                     u425:	
  1710  0613  36F1               	lsrf	___lwmod@divisor+1,f
  1711  0614  0CF0               	rrf	___lwmod@divisor,f
  1712  0615  0B89               	decfsz	9,f
  1713  0616  2E13               	goto	u425
  1714  0617  3001               	movlw	1
  1715  0618  02F5               	subwf	___lwmod@counter,f
  1716  0619  1D03               	btfss	3,2
  1717  061A  2E06               	goto	l742
  1718  061B                     l750:	
  1719  061B  0873               	movf	___lwmod@dividend+1,w
  1720  061C  00F1               	movwf	?___lwmod+1
  1721  061D  0872               	movf	___lwmod@dividend,w
  1722  061E  00F0               	movwf	?___lwmod
  1723  061F  0008               	return
  1724  0620                     __end_of___lwmod:	
  1725                           
  1726                           	psect	text8
  1727  0620                     __ptext8:	
  1728 ;; *************** function ___lwdiv *****************
  1729 ;; Defined at:
  1730 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  divisor         2    0[COMMON] unsigned int 
  1733 ;;  dividend        2    2[COMMON] unsigned int 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  quotient        2    5[COMMON] unsigned int 
  1736 ;;  counter         1    7[COMMON] unsigned char 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  2    0[COMMON] unsigned int 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2, status,0
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1
  1746 ;;      Params:         4       0       0
  1747 ;;      Locals:         3       0       0
  1748 ;;      Temps:          1       0       0
  1749 ;;      Totals:         8       0       0
  1750 ;;Total ram usage:        8 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_utoa
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           
  1760                           ;psect for function ___lwdiv
  1761  0620                     ___lwdiv:	
  1762                           
  1763                           ;incstack = 0
  1764                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1765  0620  01F5               	clrf	___lwdiv@quotient
  1766  0621  01F6               	clrf	___lwdiv@quotient+1
  1767  0622  0870               	movf	___lwdiv@divisor,w
  1768  0623  0471               	iorwf	___lwdiv@divisor+1,w
  1769  0624  1903               	btfsc	3,2
  1770  0625  2E4F               	goto	l728
  1771  0626  01F7               	clrf	___lwdiv@counter
  1772  0627  0AF7               	incf	___lwdiv@counter,f
  1773  0628                     l716:	
  1774  0628  1BF1               	btfsc	___lwdiv@divisor+1,7
  1775  0629  2E34               	goto	l718
  1776  062A  3001               	movlw	1
  1777  062B                     u325:	
  1778  062B  35F0               	lslf	___lwdiv@divisor,f
  1779  062C  0DF1               	rlf	___lwdiv@divisor+1,f
  1780  062D  0B89               	decfsz	9,f
  1781  062E  2E2B               	goto	u325
  1782  062F  3001               	movlw	1
  1783  0630  00F4               	movwf	??___lwdiv
  1784  0631  0874               	movf	??___lwdiv,w
  1785  0632  07F7               	addwf	___lwdiv@counter,f
  1786  0633  2E28               	goto	l716
  1787  0634                     l718:	
  1788  0634  3001               	movlw	1
  1789  0635                     u345:	
  1790  0635  35F5               	lslf	___lwdiv@quotient,f
  1791  0636  0DF6               	rlf	___lwdiv@quotient+1,f
  1792  0637  0B89               	decfsz	9,f
  1793  0638  2E35               	goto	u345
  1794  0639  0871               	movf	___lwdiv@divisor+1,w
  1795  063A  0273               	subwf	___lwdiv@dividend+1,w
  1796  063B  1D03               	skipz
  1797  063C  2E3F               	goto	u355
  1798  063D  0870               	movf	___lwdiv@divisor,w
  1799  063E  0272               	subwf	___lwdiv@dividend,w
  1800  063F                     u355:	
  1801  063F  1C03               	skipc
  1802  0640  2E46               	goto	l724
  1803  0641  0870               	movf	___lwdiv@divisor,w
  1804  0642  02F2               	subwf	___lwdiv@dividend,f
  1805  0643  0871               	movf	___lwdiv@divisor+1,w
  1806  0644  3BF3               	subwfb	___lwdiv@dividend+1,f
  1807  0645  1475               	bsf	___lwdiv@quotient,0
  1808  0646                     l724:	
  1809  0646  3001               	movlw	1
  1810  0647                     u365:	
  1811  0647  36F1               	lsrf	___lwdiv@divisor+1,f
  1812  0648  0CF0               	rrf	___lwdiv@divisor,f
  1813  0649  0B89               	decfsz	9,f
  1814  064A  2E47               	goto	u365
  1815  064B  3001               	movlw	1
  1816  064C  02F7               	subwf	___lwdiv@counter,f
  1817  064D  1D03               	btfss	3,2
  1818  064E  2E34               	goto	l718
  1819  064F                     l728:	
  1820  064F  0876               	movf	___lwdiv@quotient+1,w
  1821  0650  00F1               	movwf	?___lwdiv+1
  1822  0651  0875               	movf	___lwdiv@quotient,w
  1823  0652  00F0               	movwf	?___lwdiv
  1824  0653  0008               	return
  1825  0654                     __end_of___lwdiv:	
  1826                           
  1827                           	psect	text9
  1828  0689                     __ptext9:	
  1829 ;; *************** function _GetStringReverse *****************
  1830 ;; Defined at:
  1831 ;;		line 59 in file "drv_74hc595/drv_74hc595.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  str             1    wreg     PTR unsigned char 
  1834 ;;		 -> Display_value@myBuffer(6), 
  1835 ;;  buff            1    0[COMMON] PTR unsigned char 
  1836 ;;		 -> Display_value@numChar(6), 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  str             1    2[COMMON] PTR unsigned char 
  1839 ;;		 -> Display_value@myBuffer(6), 
  1840 ;;  i               2    3[COMMON] int 
  1841 ;;  sptr            1    6[COMMON] PTR unsigned char 
  1842 ;;		 -> Display_value@myBuffer(6), 
  1843 ;;  rptr            1    5[COMMON] PTR unsigned char 
  1844 ;;		 -> Display_value@numChar(6), 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;		None               void
  1847 ;; Registers used:
  1848 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1
  1854 ;;      Params:         1       0       0
  1855 ;;      Locals:         5       0       0
  1856 ;;      Temps:          1       0       0
  1857 ;;      Totals:         7       0       0
  1858 ;;Total ram usage:        7 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; This function calls:
  1861 ;;		Nothing
  1862 ;; This function is called by:
  1863 ;;		_Display_value
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           
  1868                           ;psect for function _GetStringReverse
  1869  0689                     _GetStringReverse:	
  1870                           
  1871                           ;incstack = 0
  1872                           ; Regs used in _GetStringReverse: [wreg+fsr1l+fsr1h+status,2+status,0]
  1873                           ;GetStringReverse@str stored from wreg
  1874  0689  00F2               	movwf	GetStringReverse@str
  1875                           
  1876                           ;drv_74hc595.c: 62: int i=0;
  1877  068A  01F3               	clrf	GetStringReverse@i
  1878  068B  01F4               	clrf	GetStringReverse@i+1
  1879                           
  1880                           ;drv_74hc595.c: 63: char *sptr;
  1881                           ;drv_74hc595.c: 64: char *rptr;
  1882                           ;drv_74hc595.c: 65: rptr=buff;
  1883  068C  0870               	movf	GetStringReverse@buff,w
  1884  068D  00F1               	movwf	??_GetStringReverse
  1885  068E  0871               	movf	??_GetStringReverse,w
  1886  068F  00F5               	movwf	GetStringReverse@rptr
  1887                           
  1888                           ;drv_74hc595.c: 66: sptr=str;
  1889  0690  0872               	movf	GetStringReverse@str,w
  1890  0691  00F1               	movwf	??_GetStringReverse
  1891  0692  0871               	movf	??_GetStringReverse,w
  1892  0693  00F6               	movwf	GetStringReverse@sptr
  1893  0694                     l808:	
  1894                           ;drv_74hc595.c: 67: while(*sptr)
  1895                           
  1896  0694  0876               	movf	GetStringReverse@sptr,w
  1897  0695  0086               	movwf	6
  1898  0696  0187               	clrf	7
  1899  0697  0801               	movf	1,w
  1900  0698  1903               	btfsc	3,2
  1901  0699  2EB7               	goto	l818
  1902                           
  1903                           ;drv_74hc595.c: 68: {
  1904                           ;drv_74hc595.c: 69: sptr++;
  1905  069A  3001               	movlw	1
  1906  069B  00F1               	movwf	??_GetStringReverse
  1907  069C  0871               	movf	??_GetStringReverse,w
  1908  069D  07F6               	addwf	GetStringReverse@sptr,f
  1909                           
  1910                           ;drv_74hc595.c: 70: i++;
  1911  069E  3001               	movlw	1
  1912  069F  07F3               	addwf	GetStringReverse@i,f
  1913  06A0  3000               	movlw	0
  1914  06A1  3DF4               	addwfc	GetStringReverse@i+1,f
  1915  06A2  2E94               	goto	l808
  1916  06A3                     l810:	
  1917                           ;drv_74hc595.c: 71: }
  1918                           ;drv_74hc595.c: 72: while(i>0)
  1919                           
  1920                           
  1921                           ;drv_74hc595.c: 73: {
  1922                           ;drv_74hc595.c: 74: sptr--;
  1923  06A3  3001               	movlw	1
  1924  06A4  02F6               	subwf	GetStringReverse@sptr,f
  1925                           
  1926                           ;drv_74hc595.c: 75: *rptr=*sptr;
  1927  06A5  0876               	movf	GetStringReverse@sptr,w
  1928  06A6  0086               	movwf	6
  1929  06A7  0187               	clrf	7
  1930  06A8  0801               	movf	1,w
  1931  06A9  00F1               	movwf	??_GetStringReverse
  1932  06AA  0875               	movf	GetStringReverse@rptr,w
  1933  06AB  0086               	movwf	6
  1934  06AC  0187               	clrf	7
  1935  06AD  0871               	movf	??_GetStringReverse,w
  1936  06AE  0081               	movwf	1
  1937                           
  1938                           ;drv_74hc595.c: 76: rptr++;
  1939  06AF  3001               	movlw	1
  1940  06B0  00F1               	movwf	??_GetStringReverse
  1941  06B1  0871               	movf	??_GetStringReverse,w
  1942  06B2  07F5               	addwf	GetStringReverse@rptr,f
  1943                           
  1944                           ;drv_74hc595.c: 77: --i;
  1945  06B3  30FF               	movlw	255
  1946  06B4  07F3               	addwf	GetStringReverse@i,f
  1947  06B5  30FF               	movlw	255
  1948  06B6  3DF4               	addwfc	GetStringReverse@i+1,f
  1949  06B7                     l818:	
  1950  06B7  0874               	movf	GetStringReverse@i+1,w
  1951  06B8  3A80               	xorlw	128
  1952  06B9  00F1               	movwf	??_GetStringReverse
  1953  06BA  3080               	movlw	128
  1954  06BB  0271               	subwf	??_GetStringReverse,w
  1955  06BC  1D03               	skipz
  1956  06BD  2EC0               	goto	u495
  1957  06BE  3001               	movlw	1
  1958  06BF  0273               	subwf	GetStringReverse@i,w
  1959  06C0                     u495:	
  1960  06C0  1803               	skipnc
  1961  06C1  2EA3               	goto	l810
  1962                           
  1963                           ;drv_74hc595.c: 78: }
  1964                           ;drv_74hc595.c: 79: *rptr='\0';
  1965  06C2  0875               	movf	GetStringReverse@rptr,w
  1966  06C3  0086               	movwf	6
  1967  06C4  0187               	clrf	7
  1968  06C5  0181               	clrf	1
  1969  06C6  0008               	return
  1970  06C7                     __end_of_GetStringReverse:	
  1971                           
  1972                           	psect	text10
  1973  0654                     __ptext10:	
  1974 ;; *************** function _Display_put *****************
  1975 ;; Defined at:
  1976 ;;		line 35 in file "drv_74hc595/drv_74hc595.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  dig             2    0[COMMON] PTR unsigned char 
  1979 ;;		 -> NULL(0), RAM(4096), RAM(4096), 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  i               1    5[COMMON] unsigned char 
  1982 ;;  digit           1    4[COMMON] unsigned char 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;		None               void
  1985 ;; Registers used:
  1986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1
  1992 ;;      Params:         2       0       0
  1993 ;;      Locals:         2       0       0
  1994 ;;      Temps:          2       0       0
  1995 ;;      Totals:         6       0       0
  1996 ;;Total ram usage:        6 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		_Display_value
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           
  2006                           ;psect for function _Display_put
  2007  0654                     _Display_put:	
  2008                           
  2009                           ;drv_74hc595.c: 37: char digit = (char)dig;
  2010                           
  2011                           ;incstack = 0
  2012                           ; Regs used in _Display_put: [wreg-fsr0h+status,2+status,0+pclath]
  2013  0654  0870               	movf	Display_put@dig,w
  2014  0655  00F2               	movwf	??_Display_put
  2015  0656  0872               	movf	??_Display_put,w
  2016  0657  00F4               	movwf	Display_put@digit
  2017                           
  2018                           ;drv_74hc595.c: 38: if(digit == (0))
  2019  0658  0874               	movf	Display_put@digit,w
  2020  0659  1D03               	btfss	3,2
  2021  065A  2E5D               	goto	l828
  2022                           
  2023                           ;drv_74hc595.c: 39: {
  2024                           ;drv_74hc595.c: 40: digit = 0;
  2025  065B  01F4               	clrf	Display_put@digit
  2026                           
  2027                           ;drv_74hc595.c: 41: }
  2028  065C  2E5F               	goto	l830
  2029  065D                     l828:	
  2030                           
  2031                           ;drv_74hc595.c: 42: else
  2032                           ;drv_74hc595.c: 43: {
  2033                           ;drv_74hc595.c: 44: digit -= 47;
  2034  065D  302F               	movlw	47
  2035  065E  02F4               	subwf	Display_put@digit,f
  2036  065F                     l830:	
  2037                           
  2038                           ;drv_74hc595.c: 45: }
  2039                           ;drv_74hc595.c: 47: const uint8_t const display_segment[]={0b00000000,0b01101111,0b00001
      +                          010,0b01110110,0b01011110,0b00011011,0b01011101,0b01111101,0b00001110,0b01111111,0b01011
      +                          111};
  2040                           ;drv_74hc595.c: 48: uint8_t i=0;
  2041  065F  01F5               	clrf	Display_put@i
  2042                           
  2043                           ;drv_74hc595.c: 49: do { LATC5 = 0; } while(0);
  2044  0660  0022               	movlb	2	; select bank2
  2045  0661  128E               	bcf	14,5	;volatile
  2046                           
  2047                           ;drv_74hc595.c: 50: do { LATC4 = 0; } while(0);
  2048  0662  120E               	bcf	14,4	;volatile
  2049                           
  2050                           ;drv_74hc595.c: 51: for(i=0; i<8; i++)
  2051  0663  01F5               	clrf	Display_put@i
  2052  0664                     L2:	
  2053  0664  3008               	movlw	8
  2054  0665  0275               	subwf	Display_put@i,w
  2055  0666  1803               	btfsc	3,0
  2056  0667  0008               	return
  2057                           
  2058                           ;drv_74hc595.c: 52: {
  2059                           ;drv_74hc595.c: 53: RC3 = ((display_segment[digit] & (1<<i))==0)?0:1;
  2060  0668  0874               	movf	Display_put@digit,w
  2061  0669  3EED               	addlw	low (Display_put@display_segment| (0+32768))
  2062  066A  0084               	movwf	4
  2063  066B  3087               	movlw	high (Display_put@display_segment| (0+32768))
  2064  066C  1803               	skipnc
  2065  066D  3E01               	addlw	1
  2066  066E  0085               	movwf	5
  2067  066F  0800               	movf	0,w	;code access
  2068  0670  00F2               	movwf	??_Display_put
  2069  0671  3001               	movlw	1
  2070  0672  00F3               	movwf	??_Display_put+1
  2071  0673  0A75               	incf	Display_put@i,w
  2072  0674  2E76               	goto	u524
  2073  0675                     u525:	
  2074  0675  35F3               	lslf	??_Display_put+1,f
  2075  0676                     u524:	
  2076  0676  0B89               	decfsz	9,f
  2077  0677  2E75               	goto	u525
  2078  0678  0873               	movf	??_Display_put+1,w
  2079  0679  0572               	andwf	??_Display_put,w
  2080  067A  1903               	btfsc	3,2
  2081  067B  2E7F               	goto	u530
  2082  067C  0020               	movlb	0	; select bank0
  2083  067D  158E               	bsf	14,3	;volatile
  2084  067E  2E81               	goto	l844
  2085  067F                     u530:	
  2086  067F  0020               	movlb	0	; select bank0
  2087  0680  118E               	bcf	14,3	;volatile
  2088  0681                     l844:	
  2089                           ;drv_74hc595.c: 54: do { LATC5 = 1; } while(0);
  2090                           
  2091  0681  0022               	movlb	2	; select bank2
  2092  0682  168E               	bsf	14,5	;volatile
  2093                           
  2094                           ;drv_74hc595.c: 55: do { LATC5 = 0; } while(0);
  2095  0683  128E               	bcf	14,5	;volatile
  2096  0684  3001               	movlw	1
  2097  0685  00F2               	movwf	??_Display_put
  2098  0686  0872               	movf	??_Display_put,w
  2099  0687  07F5               	addwf	Display_put@i,f
  2100  0688  2E64               	goto	L2
  2101  0689                     __end_of_Display_put:	
  2102  007E                     btemp	set	126	;btemp
  2103  007E                     wtemp	set	126
  2104  007E                     wtemp0	set	126
  2105  0080                     wtemp1	set	128
  2106  0082                     wtemp2	set	130
  2107  0084                     wtemp3	set	132
  2108  0086                     wtemp4	set	134
  2109  0088                     wtemp5	set	136
  2110  007F                     wtemp6	set	127
  2111  007E                     ttemp	set	126
  2112  007E                     ttemp0	set	126
  2113  0081                     ttemp1	set	129
  2114  0084                     ttemp2	set	132
  2115  0087                     ttemp3	set	135
  2116  007F                     ttemp4	set	127
  2117  007E                     ltemp	set	126
  2118  007E                     ltemp0	set	126
  2119  0082                     ltemp1	set	130
  2120  0086                     ltemp2	set	134
  2121  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    113
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     32      45
    BANK1            32      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 6
		 -> Display_value@myBuffer(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 6
		 -> Display_value@myBuffer(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 6
		 -> Display_value@myBuffer(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 6
		 -> Display_value@myBuffer(BANK0[6]), 

    GetStringReverse@str	PTR unsigned char  size(1) Largest target is 6
		 -> Display_value@myBuffer(BANK0[6]), 

    GetStringReverse@sptr	PTR unsigned char  size(1) Largest target is 6
		 -> Display_value@myBuffer(BANK0[6]), 

    GetStringReverse@buff	PTR unsigned char  size(1) Largest target is 6
		 -> Display_value@numChar(BANK0[6]), 

    GetStringReverse@rptr	PTR unsigned char  size(1) Largest target is 6
		 -> Display_value@numChar(BANK0[6]), 

    Display_put@dig	PTR unsigned char  size(2) Largest target is 4096
		 -> NULL(NULL[0]), RAM(DATA[4096]), RAM(DATA[4096]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 6
		 -> Display_value@myBuffer(BANK0[6]), 


Critical Paths under _main in COMMON

    _Display_value->_itoa
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    _main->_Display_value
    _Display_value->_itoa
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2247
                                             29 BANK0      3     3      0
                      _Display_value
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display_value                                       19    17      2    2224
                                             10 BANK0     19    17      2
                        _Display_put
                   _GetStringReverse
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    1370
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1074
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _GetStringReverse                                     7     6      1     242
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (2) _Display_put                                          6     4      2     297
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display_value
     _Display_put
     _GetStringReverse
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     20      2D       6       56.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      3B       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Dec 01 15:50:30 2015

                     ??_Display_put 0072                     ??_Display_value 002C  
                       __CFG_CP$OFF 0000                                  l27 0783  
                               l377 070D                                 l810 06A3  
                               l724 0646                                 l716 0628  
                               l740 05FA                                 l830 065F  
                               l718 0634                                 l742 0606  
                               l750 061B                                 l910 05BF  
                               l808 0694                                 l728 064F  
                               l818 06B7                                 l746 0612  
                               l844 0681                                 l828 065D  
                               l756 06CD                                 l766 06E9  
                               l794 05E9                                 l894 0763  
                               l898 0775                                 _RC3 0073  
                               u325 062B                                 u415 060C  
                               u345 0635                                 u425 0613  
                               u530 067F                                 u355 063F  
                               u524 0676                                 u525 0675  
                               u365 0647                                 u560 0733  
                               u570 0741                                 u395 05FD  
                               u495 06C0                                 _dot 004C  
                      __CFG_BORV$LO 0000                                 wreg 0009  
                      __CFG_LVP$OFF 0000                                _LATA 010C  
                              _LATC 010E                                _WPUA 020C  
                      __CFG_WRT$OFF 0000                                _main 05B9  
                              _itoa 05D1                                fsr0h 0005  
                              fsr1h 0007                                fsr0l 0004  
                              indf0 0000                                indf1 0001  
                              fsr1l 0006                                btemp 007E  
                              _utoa 06C7                       __CFG_BOREN$ON 0000  
                              ltemp 007E                                start 0001  
                              ttemp 007E                                wtemp 007E  
    __size_of_OSCILLATOR_Initialize 0005       __end_of_OSCILLATOR_Initialize 059B  
                 GetStringReverse@i 0073                               ?_main 0070  
                             ?_itoa 0024                 __end_of_Display_put 0689  
                     __CFG_WDTE$OFF 0000                               ?_utoa 0078  
                             _LATC4 0874                               _LATC5 0875  
                   __end_of___lwdiv 0654                     __end_of___lwmod 0620  
                             _TRISA 008C                               _TRISC 008E  
                             main@m 003F                               ltemp0 007E  
                             ltemp1 0082                               ltemp2 0086  
                             ltemp3 0080                               ttemp0 007E  
                             ttemp1 0081                               ttemp2 0084  
                             ttemp3 0087                               ttemp4 007F  
                             utoa@c 0022                               utoa@v 0020  
                             status 0003                               wtemp0 007E  
                             wtemp1 0080                               wtemp2 0082  
                             wtemp3 0084                               wtemp4 0086  
                             wtemp5 0088                               wtemp6 007F  
                    __CFG_MCLRE$OFF 0000                     __initialization 07F8  
                      __end_of_main 05D1                        __end_of_itoa 05F4  
                      __end_of_utoa 0723                      __CFG_LPBOR$OFF 0000  
                            ??_main 003D                              ??_itoa 007D  
                            ??_utoa 007C                              _APFCON 011D  
                            _ANSELA 018C                              _ANSELC 018E  
                            _OSCCON 0099                      __CFG_PWRTE$OFF 0000  
                 ?_GetStringReverse 0070                  ??_GetStringReverse 0071  
                       _Display_put 0654                      __CFG_STVREN$ON 0000  
                         ??___lwdiv 0074                           ??___lwmod 0074  
                            _lookup 0787                              itoa@cp 0028  
                  Display_put@digit 0074                   _SYSTEM_Initialize 0593  
           __end_of__initialization 07FE                  ?_SYSTEM_Initialize 0070  
                    __pcstackCOMMON 0070                 ??_SYSTEM_Initialize 0070  
                    _OPTION_REGbits 0095           __end_of_SYSTEM_Initialize 0596  
                        __pbssBANK0 0040                          __pmaintext 05B9  
               GetStringReverse@str 0072               __end_of_Display_value 0787  
                           _OSCSTAT 009A                             ___lwdiv 0620  
                           ___lwmod 05F4                             __ptext1 0593  
                           __ptext2 05A1                             __ptext3 0596  
                           __ptext4 0723                             __ptext5 05D1  
                           __ptext6 06C7                             __ptext7 05F4  
                           __ptext8 0620                             __ptext9 0689  
             _OSCILLATOR_Initialize 0596            ??_PIN_MANAGER_Initialize 0070  
        __size_of_SYSTEM_Initialize 0003                             clrloop0 059C  
              end_of_initialization 07FE                             itoa@buf 0029  
                           itoa@val 0024                        ?_Display_put 0070  
                      __pstringtext 0787                             utoa@buf 0023  
                           utoa@val 0078           __size_of_GetStringReverse 003E  
                  __CFG_FOSC$INTOSC 0000  __end_ofDisplay_put@display_segment 07F8  
        Display_put@display_segment 07ED              ?_OSCILLATOR_Initialize 0070  
                    __end_of_lookup 07ED                 start_initialization 07F8  
   __size_of_PIN_MANAGER_Initialize 0018               Display_value@myBuffer 002E  
                         ___latbits 0000                       __pcstackBANK0 0020  
                  ___lwdiv@dividend 0072              _PIN_MANAGER_Initialize 05A1  
                          ?___lwdiv 0070                            ?___lwmod 0070  
              __size_of_Display_put 0035                GetStringReverse@buff 0070  
              GetStringReverse@rptr 0075                GetStringReverse@sptr 0076  
                  _GetStringReverse 0689                    ___lwdiv@quotient 0075  
            __size_of_Display_value 0064                           clear_ram0 059B  
           ??_OSCILLATOR_Initialize 0070                      Display_value@i 003C  
                    Display_put@dig 0070                    __size_of___lwdiv 0034  
                  __size_of___lwmod 002C                Display_value@numChar 0034  
                     _Display_value 0723                     ___lwdiv@divisor 0070  
                   ___lwdiv@counter 0077                            __ptext10 0654  
                     __size_of_main 0018                       __size_of_itoa 0023  
                     __size_of_utoa 005C                      ?_Display_value 002A  
                          itoa@base 0026                 Display_value@number 003A  
                  ___lwmod@dividend 0072             ?_PIN_MANAGER_Initialize 0070  
                 __CFG_CLKOUTEN$OFF 0000            __end_of_GetStringReverse 06C7  
                Display_value@F3165 0040                  Display_value@F3167 0046  
                      Display_put@i 0075                            utoa@base 007A  
                Display_value@value 002A                     ___lwmod@divisor 0070  
                   ___lwmod@counter 0075      __end_of_PIN_MANAGER_Initialize 05B9  
